package com.swv.oscar.service.batch.impl;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.swv.oscar.dataobject.batch.Ocse157;
import com.swv.oscar.dataobject.batch.Ocse157Store;
import com.swv.oscar.dataobject.batch.Weo2nfyr;
import com.swv.oscar.dataobject.batch.Weo2nfyrBO;
import com.swv.oscar.dataobject.batch.Weo2p57a;
import com.swv.oscar.dataobject.batch.Weo2p57aBO;
import com.swv.oscar.exceptions.OscarBusinessException;
import com.swv.oscar.repositories.IWeo2p57aRepository;
import com.swv.oscar.service.batch.IWeo0cberService;
import com.swv.oscar.service.batch.IWeo0chkpService;
import com.swv.oscar.service.batch.IWeo2nfyrService;
import com.swv.oscar.service.batch.IWeo2p57aService;
import com.swv.oscar.shared.set.AppConstants;
import com.swv.oscar.util.MappingHelper;
import com.swv.oscar.util.NaturalUtil;
import com.swv.oscar.util.OscarLogger;

/*************************************************************************
 *
 * SWV CONFIDENTIAL
 * _________________________________________________________________________________
 *
 * SWV is a trademark of SWV Company.
 *
 *Copyright © 2017 SWV. All rights reserved.
 *
 * NOTICE: All information contained herein is, and remains the property of SWV
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SWV and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SWV.
 *
 *************************************************************************/
// Author : Generated by ATMA ®
// Revision History :
@Service
public class Weo2p57aServiceImpl implements  IWeo2p57aService {

	private static final OscarLogger LOGGER = OscarLogger.create(Weo2p57aServiceImpl.class);

	@Autowired
	private IWeo2p57aRepository weo2p57aRepository;

	public void setWeo2p57aRepository(IWeo2p57aRepository weo2p57aRepository) {
		this.weo2p57aRepository = weo2p57aRepository;
	}

	@Autowired
	private IWeo0chkpService weo0chkpService;

	public void setWeo0chkpService(IWeo0chkpService weo0chkpService) {
		this.weo0chkpService = weo0chkpService;
	}

	@Autowired
	private IWeo2nfyrService weo2nfyrService;

	public IWeo2nfyrService getWeo2nfyrService() {
		return weo2nfyrService;
	}

	public void setWeo2nfyrService(IWeo2nfyrService weo2nfyrService) {
		this.weo2nfyrService = weo2nfyrService;
	}

	String query = null;

	List<Ocse157> ocse157List = new ArrayList<>();

	List<Weo2p57a> weo2p57aList = new ArrayList<>();

	//
	//  CHECKED OUT BY:
	//
	//  WEO2P57A - CALCULATE OCSE-157 SECTION A TOTALS AND WRITE EXTRACT
	//             OF CASES INCLUDED IN THE COUNTS.
	//
	// DATE       | BY      | REASON
	//
	// 09-14-2000  PRYCE    INITIAL DEVELOPMENT;
	// 09-30-2000  PRYCE    REJECT 2 SUNDRY CASES
	// 10-02-2000  PRYCE    CHANGED LINE2C CALC PER SPEC CHANGE 10/1
	//                      CHANGED TO CS AND MS SUPPORT TYPES ONLY.
	// 10-27-2000  R. LOVE  MADE CHANGES TO CORRECT CALCULATIONS
	// 10-31-2000  R. LOVE  MADE CHANGES TO GET RID OF CLOSED CASES BEING
	//                      ADDED TO THE COUNTS
	// 11-27-2000  R. LOVE  CHANGED THE WAY WE PROCESS THE END_DATE
	// 12-05-2000  R. LOVE  FOUND PROBLEM IN ABOVE FIX AND ADDED NEW LOGIC
	//                      IN THE END DATE PROCESSING
	// 12-07-2000  R. LOVE  FOUND PROBLEM IN ABOVE FIX AND ADDED NEW LOGIC
	//                      IN THE END DATE PROCESSING AGAIN
	// 12-08-2000  R. LOVE  ADDED LOGIC TO ALSO PULL IN CASE WITH JUDGMENTS
	//                      ONLY
	// 12-11-2000  R. LOVE  ADDED LOGIC TO PULL IN CASES WITH ONLY CSJN
	//                      AND MSJN JUDGMENTS
	// 12-12-2000  R. LOVE  ADDED LOGIC TO FIX PROBLEM CREATED BY LAST FIX
	// 12-13-2000  R. LOVE  ADDED LOGIC TO FIX PROBLEM WITH THE WAY WE
	//                      PROCESSED GRANT INFORMATION
	// 12-14-2000  R. LOVE  CHANGED LOGIC IN CHECKING TRACKING FOR
	//                      OOS-CASE-TYPE AND CASE-STATUS
	// 09-05-2001  R. LOVE  MADE CHANGES IN LINE 2 TO COUNT OUT OF STATE
	//                      OBLIGATIONS AS WELL AS IN STATE
	// 01-11-2002  R. LOVE  PROGRAM CLEANUP AND ADDED CODE FOR NEW ORDER
	// 03-06-2002  R. LOVE  ADDED CODE FOR NEW DISTRIBUTION
	// 10-10-2002  R. LOVE  MADE USER DEFINE VARIABLES BIGGER DUE TO ERR
	// 10-11-2002  CORNELL  ADDED DATA_AUDIT_TYPE = C FOR CASE
	// 02-06-2003  CORNELL  CHANGED >= & <= TO BETWEEN IN SELECT STATEMT
	// 08-12-2003  CORNELL  ADDED FETCH FOR FIRST ROW ONLY
	// 10-03-2003  R. LOVE  ADDED TABLE LOCKING LOGIC
	// 04-10-2006  R. LOVE  ADDED LOGIC TO NOT LOOK AT VO OBLIGATIONS
	// 08-10-2006  R. LOVE  TOOK OUT MEDICAL ORDER LOGIC
	// 10-12-2006  R. LOVE  ADDED LOGIC FOR NEW LINE 2E
	// 04-25-2007  R. LOVE  CHANGED 2E TO NOT GET SPOUSAL ONLY ARREARS ONLY
	//                      CASES AND ADDED DELIMITER ; TO WRITES
	// 05-09-2007  R. LOVE  CHANGE LINE 2 TO LOOK AT OBLG ENTRY DATE
	// 09-28-2007  R. LOVE  CHANGED CDN TO CASE ID ON OUTPUT
	// 10-10-2007  R. LOVE  CHANGED TRACKING WHEN GETTING FYE CASE TYPE
	// 10-01-2008  R. LOVE  CHANGED FORMAT OF WORK FILES
	// 06-18-2009  R. LOVE  ADDED LINES 1F, 1G, 2H, AND 2I TO PROGRAM
	// 10-13-2009  R. LOVE  FIXED PROBLEM CREATED BY ABOVE CHANGE
	// 05-25-2010  R. LOVE  TOOK OUT ALL LOGIC WITH AP INSU OF AR
	// 08-06-2010  R. LOVE  FIXED TO BE ABLE TO RUN ANYTIME
	// 08-27-2010  R. LOVE  STOPPED LOOKING AT COUNTRY CODE FROM CTAD AND
	//                      APAD WHEN COUNTING INTERNATIONAL CASES
	// 09-29-2010  R. LOVE  CHANGED TO RUN ANYTIME
	// 11-18-2010  R. LOVE  ADDED NEW HC ORDER TYPE PROCESSING - 130876
	// 05-08-2011  GCAIN1   134207 CONVERT FOR MONTHLY RUNS
	// 08-23-2011  R. LOVE  133409 ADDED FOREIGN/TRIBAL FIPS LOGIC
	// 09-25-2012  R. LOVE  143379 VERIFIED CASE START LOGIC AND ADDED
	//                      AND ADDED END OF PROCESSING MESSAGE
	// 01-22-2013  R. LOVE  REMOVED FIELD CURR_RECORD_IND FROM ORDER SELECT
	// 05-27-2014  R. LOVE  165371 ADDED CS_EXTEND_18 FOR LINE 2C
	// 09-02-2015  R. LOVE  REMOVED OBLIGATION_PCT FROM OBLIGATION SELECT
	// 11-09-2015  R. LOVE  190989 EXPANDED ALL INTEREST FIELDS TO 7.2
	// 09-28-2016  R. LOVE  006589 EXCLUDE OBLIGATIONS ENTERED IN ERROR(EE)
	//
	// INITIALIZATION

	/**
	 * Method execute
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	@Override
	public Weo2p57aBO execute(Weo2p57aBO weo2p57aBOReq) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aBOReq);
		Weo2p57aBO weo2p57aBOResp = null;
		Ocse157Store ocse157Store = new Ocse157Store();
		try {
			weo2p57aBOResp =  new Weo2p57aBO();

			weo0chkpService.execute(weo2p57aBOReq);

			lockTables(weo2p57aBOReq);

			setFiscalYear(weo2p57aBOReq);

			readCases(weo2p57aBOReq);

			if(weo2p57aList != null && !weo2p57aList.isEmpty() && 
					ocse157List != null && !ocse157List.isEmpty()){
				weo2p57aBOReq.setWeo2p57a(weo2p57aList);
				weo2p57aBOReq.setOcse157(ocse157List);
				for(int count = 0 ; count < weo2p57aList.size() &&  count < ocse157List.size() ; count ++){

					query = "select 1 from WEOVOCSE_157 where FISCAL_YEAR = '" + weo2p57aList.get(count).getFiscalYear() + "'" +
							" AND FED_FISCAL_QTR = '" + weo2p57aList.get(count).getFyQtr() +"'";
					weo2p57aBOResp = weo2p57aRepository.executeQuery0(query);
					if(weo2p57aBOResp.getWeo2p57a() != null ){
						Weo2p57a countcnt = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
						weo2p57aList.get(count).setCnt(countcnt.getCnt());
					}
					// CC 08-2003
					if(weo2p57aList.get(count).getCnt() == 0) {
						// PRINT STORING 157, COUNT = #CNT
						if(weo2p57aList.get(count).getMthOrQtr() != null && "Q".equalsIgnoreCase(weo2p57aList.get(count).getMthOrQtr())) {
							ocse157Store.setTimeCreated(ocse157List.get(count).getTimeUpdated());
							ocse157Store.setUidCreated(NaturalUtil.getCurrentProgram());
							ocse157Store.setFiscalYear(ocse157List.get(count).getFiscalYear());
							ocse157Store.setFedFiscalQtr(ocse157List.get(count).getFedFiscalQtr());
							ocse157Store.setTotCasesCurr(ocse157List.get(count).getTotCasesCurr());
							ocse157Store.setTotCasesFrmr(ocse157List.get(count).getTotCasesFrmr());
							ocse157Store.setTotCasesNevr(ocse157List.get(count).getTotCasesNevr());
							ocse157Store.setUiCasesCurr(ocse157List.get(count).getUiCasesCurr());
							ocse157Store.setUiCasesFrmr(ocse157List.get(count).getUiCasesFrmr());
							ocse157Store.setUiCasesNevr(ocse157List.get(count).getUiCasesNevr());
							ocse157Store.setUrCasesCurr(ocse157List.get(count).getUrCasesCurr());
							ocse157Store.setUrCasesFrmr(ocse157List.get(count).getUrCasesFrmr());
							ocse157Store.setUrCasesNevr(ocse157List.get(count).getUrCasesNevr());
							ocse157Store.setTotMCasesNevr(ocse157List.get(count).getTotMCasesNevr());
							ocse157Store.setCrtordCasesCurr(ocse157List.get(count).getCrtordCasesCurr());
							ocse157Store.setCrtordCasesFrmr(ocse157List.get(count).getCrtordCasesFrmr());
							ocse157Store.setCrtordCasesNevr(ocse157List.get(count).getCrtordCasesNevr());
							ocse157Store.setCrtordUiCasCurr(ocse157List.get(count).getCrtordUiCasCurr());
							ocse157Store.setCrtordUiCasFrmr(ocse157List.get(count).getCrtordUiCasFrmr());
							ocse157Store.setCrtordUiCasNevr(ocse157List.get(count).getCrtordUiCasNevr());
							ocse157Store.setCrtordUrCasCurr(ocse157List.get(count).getCrtordUrCasCurr());
							ocse157Store.setCrtordUrCasFrmr(ocse157List.get(count).getCrtordUrCasFrmr());
							ocse157Store.setCrtordUrCasNevr(ocse157List.get(count).getCrtordUrCasNevr());
							ocse157Store.setZeroOrdCaseCurr(ocse157List.get(count).getZeroOrdCaseCurr());
							ocse157Store.setZeroOrdCaseFrmr(ocse157List.get(count).getZeroOrdCaseFrmr());
							ocse157Store.setZeroOrdCaseNevr(ocse157List.get(count).getZeroOrdCaseNevr());
							ocse157Store.setCrtordMCasNevr(ocse157List.get(count).getCrtordMCasNevr());
							ocse157Store.setNoJursCasesCurr(ocse157List.get(count).getNoJursCasesCurr());
							ocse157Store.setNoJursCasesFrmr(ocse157List.get(count).getNoJursCasesFrmr());
							ocse157Store.setNoJursCasesNevr(ocse157List.get(count).getNoJursCasesNevr());
							ocse157Store.setArrsOnlyOrdr(ocse157List.get(count).getArrsOnlyOrdr());
							ocse157Store.setTrInitCurr(ocse157List.get(count).getTrInitCurr());
							ocse157Store.setTrInitFrmr(ocse157List.get(count).getTrInitFrmr());
							ocse157Store.setTrInitNevr(ocse157List.get(count).getTrInitNevr());
							ocse157Store.setTrRecCurr(ocse157List.get(count).getTrRecCurr());
							ocse157Store.setTrRecFrmr(ocse157List.get(count).getTrRecFrmr());
							ocse157Store.setTrRecNevr(ocse157List.get(count).getTrRecNevr());
							ocse157Store.setTrInitOrdrCurr(ocse157List.get(count).getTrInitOrdrCurr());
							ocse157Store.setTrInitOrdrFrmr(ocse157List.get(count).getTrInitOrdrFrmr());
							ocse157Store.setTrInitOrdrNevr(ocse157List.get(count).getTrInitOrdrNevr());
							ocse157Store.setTrRecOrdrCurr(ocse157List.get(count).getTrRecOrdrCurr());
							ocse157Store.setTrRecOrdrFrmr(ocse157List.get(count).getTrRecOrdrFrmr());
							ocse157Store.setTrRecOrdrNevr(ocse157List.get(count).getTrRecOrdrNevr());
							ocse157Store.setInterInit(ocse157List.get(count).getInterInit());
							ocse157Store.setInterRec(ocse157List.get(count).getInterRec());
							ocse157Store.setInterInitOrdr(ocse157List.get(count).getInterInitOrdr());
							ocse157Store.setInterRecOrdr(ocse157List.get(count).getInterRecOrdr());
							ocse157Store.setTimeUpdated(ocse157List.get(count).getTimeUpdated());
							ocse157Store.setUidUpdated(NaturalUtil.getCurrentProgram());
							LOGGER.info("157" + ocse157Store.getFiscalYear() + ocse157Store.getFedFiscalQtr() + "157S" +
									ocse157Store.getFiscalYear() + ocse157Store.getFedFiscalQtr());
							query = "INSERT INTO WEOVOCSE_157(TIME_CREATED,UID_CREATED,FISCAL_YEAR,FED_FISCAL_QTR,TOT_CASES_CURR,TOT_CASES_FRMR,TOT_CASES_NEVR,"+
									"UI_CASES_CURR,UI_CASES_FRMR,UI_CASES_NEVR,UR_CASES_CURR,UR_CASES_FRMR,UR_CASES_NEVR,TOT_M_CASES_NEVR,CRTORD_CASES_CURR,"+
									"CRTORD_CASES_FRMR,CRTORD_CASES_NEVR,CRTORD_UI_CAS_CURR,CRTORD_UI_CAS_FRMR,CRTORD_UI_CAS_NEVR,CRTORD_UR_CAS_CURR,"+
									"CRTORD_UR_CAS_FRMR,CRTORD_UR_CAS_NEVR,ZERO_ORD_CASE_CURR,ZERO_ORD_CASE_FRMR,ZERO_ORD_CASE_NEVR,CRTORD_M_CAS_NEVR,"+
									"NO_JURS_CASES_CURR,NO_JURS_CASES_FRMR,NO_JURS_CASES_NEVR,ARRS_ONLY_ORDR,TR_INIT_CURR,TR_INIT_FRMR,TR_INIT_NEVR,"+
									"TR_REC_CURR,TR_REC_FRMR,TR_REC_NEVR,TR_INIT_ORDR_CURR,TR_INIT_ORDR_FRMR,TR_INIT_ORDR_NEVR,TR_REC_ORDR_CURR,"+
									"TR_REC_ORDR_FRMR,TR_REC_ORDR_NEVR,INTER_INIT,INTER_REC,INTER_INIT_ORDR,INTER_REC_ORDR,"+
									"TIME_UPDATED,UID_UPDATED) VALUES ( '"+
									ocse157Store.getTimeCreated() + "' , '" + ocse157Store.getUidCreated() + "' , '" + ocse157Store.getFiscalYear() + "' ,'" + 
									ocse157Store.getFedFiscalQtr() + "' , '" +	ocse157Store.getTotCasesCurr() + "' , '" + ocse157Store.getTotCasesFrmr() + "' , '" +
									ocse157Store.getTotCasesNevr() + "' , '" +	ocse157Store.getUiCasesCurr() + "' , '" + ocse157Store.getUiCasesFrmr() + "' , '" + 
									ocse157Store.getUiCasesNevr() + "' , '" +	ocse157Store.getUrCasesCurr() + "','" + ocse157Store.getUrCasesFrmr() + "','" +	
									ocse157Store.getUrCasesNevr() + "','" +		ocse157Store.getTotMCasesNevr() + "','" + ocse157Store.getCrtordCasesCurr() + "','" + 
									ocse157Store.getCrtordCasesFrmr() + "','" +	ocse157Store.getCrtordCasesNevr() + "','" +	ocse157Store.getCrtordUiCasCurr() + "','" +
									ocse157Store.getCrtordUiCasFrmr() + "','" +	ocse157Store.getCrtordUiCasNevr() + "','" +	ocse157Store.getCrtordUrCasCurr() + "','" +
									ocse157Store.getCrtordUrCasFrmr() + "','" +	ocse157Store.getCrtordUrCasNevr() + "','" +	ocse157Store.getZeroOrdCaseCurr() + "','" + 
									ocse157Store.getZeroOrdCaseFrmr() + "','" + ocse157Store.getZeroOrdCaseNevr() + "','" +	ocse157Store.getCrtordMCasNevr() + "','" + 
									ocse157Store.getNoJursCasesCurr() + "','" + ocse157Store.getNoJursCasesFrmr() + "','" +	ocse157Store.getNoJursCasesNevr() + "','" + 
									ocse157Store.getArrsOnlyOrdr() + "','" + ocse157Store.getTrInitCurr() + "','" +
									ocse157Store.getTrInitFrmr() + "','" + ocse157Store.getTrInitNevr() + "','" + ocse157Store.getTrRecCurr() + "','" +
									ocse157Store.getTrRecFrmr() + "','" + ocse157Store.getTrRecNevr() + "','" + ocse157Store.getTrInitOrdrCurr() + "','" +
									ocse157Store.getTrInitOrdrFrmr() + "','" + ocse157Store.getTrInitOrdrNevr() + "','" + ocse157Store.getTrRecOrdrCurr() + "','" +
									ocse157Store.getTrRecOrdrFrmr() + "','" + ocse157Store.getTrRecOrdrNevr() + "','" +ocse157Store.getInterInit() + "','" +
									ocse157Store.getInterRec() + "','" + ocse157Store.getInterInitOrdr() + "','" +ocse157Store.getInterRecOrdr() + "','"+
									ocse157Store.getTimeUpdated() +  "','" +ocse157Store.getUidUpdated() + "')"; 
							weo2p57aBOResp = weo2p57aRepository.insertQuery(query);
						}
					}else{
						if(weo2p57aList.get(count).getMthOrQtr() != null && "Q".equalsIgnoreCase(weo2p57aList.get(count).getMthOrQtr())) {
							query = "UPDATE WEOVOCSE_157 SET TIME_CREATED = '" + ocse157Store.getTimeCreated() + "', "+
									"UID_CREATED = '" + ocse157Store.getUidCreated()+ "', "+
									"FISCAL_YEAR = '"+ ocse157Store.getFiscalYear() + "', "+
									"FED_FISCAL_QTR = '"+ ocse157Store.getFedFiscalQtr() + "', "+
									"TOT_CASES_CURR = '"+ ocse157Store.getTotCasesCurr() + "', "+
									"TOT_CASES_FRMR = '"+ ocse157Store.getTotCasesFrmr() + "', "+
									"TOT_CASES_NEVR = '"+ ocse157Store.getTotCasesNevr() + "', "+
									"UI_CASES_CURR = '"+ ocse157Store.getUiCasesCurr() + "', "+
									"UI_CASES_FRMR = '"+ ocse157Store.getUiCasesFrmr() + "', "+
									"UI_CASES_NEVR = '"+ ocse157Store.getUiCasesNevr() + "', "+
									"UR_CASES_CURR = '"+ ocse157Store.getUrCasesCurr() + "', "+
									"UR_CASES_FRMR = '"+ ocse157Store.getUrCasesFrmr() + "', "+
									"UR_CASES_NEVR = '"+ ocse157Store.getUrCasesNevr() + "', "+
									"TOT_M_CASES_NEVR = '"+ ocse157Store.getTotMCasesNevr() + "', "+
									"CRTORD_CASES_CURR = '"+ ocse157Store.getCrtordCasesCurr() + "', "+
									"CRTORD_CASES_FRMR = '"+ ocse157Store.getCrtordCasesFrmr() + "', "+
									"CRTORD_CASES_NEVR = '"+ ocse157Store.getCrtordCasesNevr() + "', "+
									"CRTORD_UI_CAS_CURR = '"+ ocse157Store.getCrtordUiCasCurr() + "', "+
									"CRTORD_UI_CAS_FRMR = '"+ ocse157Store.getCrtordUiCasFrmr() + "', "+
									"CRTORD_UI_CAS_NEVR = '"+ ocse157Store.getCrtordUiCasNevr() + "', "+
									"CRTORD_UR_CAS_CURR = '"+ ocse157Store.getCrtordUrCasCurr() + "', "+
									"CRTORD_UR_CAS_FRMR = '"+ ocse157Store.getCrtordUrCasFrmr()+ "', "+
									"CRTORD_UR_CAS_NEVR = '"+ ocse157Store.getCrtordUrCasNevr() + "', "+
									"ZERO_ORD_CASE_CURR = '"+ ocse157Store.getZeroOrdCaseCurr() + "', "+
									"ZERO_ORD_CASE_FRMR = '"+ ocse157Store.getZeroOrdCaseFrmr() + "', "+
									"ZERO_ORD_CASE_NEVR = '"+ ocse157Store.getZeroOrdCaseNevr() + "', "+
									"CRTORD_M_CAS_NEVR  = '"+ ocse157Store.getCrtordMCasNevr() + "', "+
									"NO_JURS_CASES_CURR = '"+ ocse157Store.getNoJursCasesCurr()  + "', "+
									"NO_JURS_CASES_FRMR = '"+ ocse157Store.getNoJursCasesFrmr() + "', "+
									"NO_JURS_CASES_NEVR = '"+ ocse157Store.getNoJursCasesNevr() + "', "+
									"ARRS_ONLY_ORDR = '"+ ocse157Store.getArrsOnlyOrdr() + "', "+
									"TR_INIT_CURR = '"+ ocse157Store.getTrInitCurr() + "', "+
									"TR_INIT_FRMR = '"+ ocse157Store.getTrInitFrmr() + "', "+
									"TR_INIT_NEVR = '"+ ocse157Store.getTrInitNevr() + "', "+
									"TR_REC_CURR = '"+ ocse157Store.getTrRecCurr() + "', "+
									"TR_REC_FRMR = '"+ ocse157Store.getTrRecFrmr() + "', "+
									"TR_REC_NEVR = '"+ ocse157Store.getTrRecNevr() + "', "+
									"TR_INIT_ORDR_CURR = '"+ ocse157Store.getTrInitOrdrCurr() + "', "+
									"TR_INIT_ORDR_FRMR = '"+ ocse157Store.getTrInitOrdrFrmr() + "', "+
									"TR_INIT_ORDR_NEVR = '"+ ocse157Store.getTrInitOrdrNevr() + "', "+
									"TR_REC_ORDR_CURR = '"+ ocse157Store.getTrRecOrdrCurr() + "', "+
									"TR_REC_ORDR_FRMR = '"+ ocse157Store.getTrRecOrdrFrmr() + "', "+
									"TR_REC_ORDR_NEVR = '"+ ocse157Store.getTrRecOrdrNevr() + "', "+
									"INTER_INIT =' "+ ocse157Store.getInterInit() + "', "+
									"INTER_REC = '"+ ocse157Store.getInterRec() + "', "+
									"INTER_INIT_ORDR = '"+ ocse157Store.getInterInitOrdr() + "', "+
									"INTER_REC_ORDR = '"+ ocse157Store.getInterRecOrdr() + "', "+
									"TIME_UPDATED = '"+ ocse157Store.getTimeCreated() + "', "+
									"UID_UPDATED = '" + ocse157Store.getUidCreated() + "'"+ 
									"  WHERE FISCAL_YEAR = '" + ocse157Store.getFiscalYear() + "'" +
									" AND FED_FISCAL_QTR = '" + ocse157Store.getFedFiscalQtr() +"'";
							weo2p57aBOResp = weo2p57aRepository.executeUpdateQuery1(query);
						}
					}
				}
				return weo2p57aBOResp;
			}
			//TODO ENDTRANSACTION
			//
			/* Weo0cfin weo0cfin  = new Weo0cfin();
        	weo0cfin.execute();*/
			// WRITES PROGRAM FINISHED MESSAGE
			//
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method setFiscalYear
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO setFiscalYear(Weo2p57aBO weo2p57aBOReq) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aBOReq);
		Weo2p57aBO weo2p57aBOResp = null;
		Weo2nfyrBO weo2nfyrBOResp = new Weo2nfyrBO();
		Weo2p57a weo2p57a = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			weo2p57a = (Weo2p57a) weo2p57aBOReq.getFirst(weo2p57aBOReq.getWeo2p57a());

			Weo2nfyr weo2nfyr = new Weo2nfyr();
			List<Weo2nfyr> weo2nfyrList = new ArrayList<>();
			weo2nfyrList.add(weo2nfyr);
			weo2nfyrBOResp.setWeo2nfyr(weo2nfyrList);
			weo2nfyrService.execute(weo2nfyrBOResp);
			weo2p57a.setFyStart(weo2nfyrBOResp.getWeo2nfyr().get(0).getFfyStartDate());
			weo2p57a.setFyEnd(weo2nfyrBOResp.getWeo2nfyr().get(0).getFfyEndDate());
			weo2p57a.setFiscalYear(weo2nfyrBOResp.getWeo2nfyr().get(0).getFiscalYear());
			weo2p57a.setFyQtr(weo2nfyrBOResp.getWeo2nfyr().get(0).getFiscalQuarter());
			weo2p57a.setMthOrQtr(weo2nfyrBOResp.getWeo2nfyr().get(0).getMthOrQtr());

			//CALLNAT GCC2NFYR #FY-START #FY-END #FY-QTR      / GCAINXXX TESTING
			//#MTH-OR-QTR  := Q                               / GCAINXXX TESTING
			//#FISCAL-YEAR := #FYE-YYYY                         / GCAINXXX TESTING
			
			LOGGER.info("FISCAL YEAR: = " + weo2p57a.getFyStart() + "=" + weo2p57a.getFyEnd() + "=" + weo2p57a.getFiscalYear() + "=" + weo2p57a.getFyQtr() + "=" + weo2p57a.getMthOrQtr());
			weo2p57a.setFyStartTimestamp(weo2p57a.getFyStart() + " 00:00:00.000000");
			weo2p57a.setFyEndTimestamp(weo2p57a.getFyEnd() + " 23:59:59.999999");

			//weo0ncts.setCurrentTs(MappingHelper.getCurrentTimestamp());


		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method readCases
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO readCases(Weo2p57aBO weo2p57aBOReq) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aBOReq);
		Weo2p57aBO weo2p57aBOResp = null;
		Weo2p57a weo2p57aGlobal = null;
		Weo2p57a weo2p57aLocal;
		try {
			weo2p57aGlobal = (Weo2p57a) weo2p57aBOReq.getFirst(weo2p57aBOReq.getWeo2p57a());

			query = "SELECT CASE_ID,CASE_TYPE,CURR_CASE_STATUS,CASE_DISPLAY_NBR, P.AP_STATUS_CD,  OOS_CASE_TYPE, "+
					" AFDC_CASE_NBR, CASE_START_DATE, ASSIST_TYPE_157, STATUS_CHG_DATE, SERVICE_TYPE, AP_PIN,CTKR_PIN"+
					" FROM WEOVCASE C , WEOVPERSON_AP P WHERE C.AP_PIN = P.PIN " +
					" AND CASE_START_DATE <= '" + weo2p57aGlobal.getFyEnd() + "' AND ARCHIVE_NBR = ' '";
			weo2p57aBOResp = weo2p57aRepository.executeReadCasesQuery2(query);
			if(weo2p57aBOResp.getWeo2p57a() != null ){
				for(Weo2p57a weo2p57areadCases : weo2p57aBOResp.getWeo2p57a() ){					
					weo2p57aLocal = new Weo2p57a();
					weo2p57aLocal.setFyEnd(weo2p57aGlobal.getFyEnd());
					weo2p57aLocal.setNbrOfTables(weo2p57aGlobal.getNbrOfTables());
					weo2p57aLocal.setViewArray(weo2p57aGlobal.getViewArray());
					weo2p57aLocal.setFyStart(weo2p57aGlobal.getFyStart());
					weo2p57aLocal.setFyEnd(weo2p57aGlobal.getFyEnd());
					weo2p57aLocal.setFiscalYear(weo2p57aGlobal.getFiscalYear());
					weo2p57aLocal.setFyQtr(weo2p57aGlobal.getFyQtr());
					weo2p57aLocal.setMthOrQtr(weo2p57aGlobal.getMthOrQtr());
					weo2p57aLocal.setChangedTime(MappingHelper.getCurrentTimestamp());
					weo2p57aLocal.setFyStartTimestamp(weo2p57aGlobal.getFyStartTimestamp());
					weo2p57aLocal.setFyEndTimestamp(weo2p57aGlobal.getFyEndTimestamp());
					weo2p57aLocal.setOldCaseStatus(weo2p57aGlobal.getOldCaseStatus());
					weo2p57aLocal.setNewCaseType(weo2p57aGlobal.getNewCaseType());
					weo2p57aLocal.setOldOosType(weo2p57aGlobal.getOldOosType());
					weo2p57aLocal.setCdn2(weo2p57aGlobal.getCdn2());
					weo2p57aLocal.setCaseId(weo2p57areadCases.getCaseId());
					weo2p57aLocal.setCaseType(weo2p57areadCases.getCaseType());
					weo2p57aLocal.setStatus(weo2p57areadCases.getStatus());
					weo2p57aLocal.setCdn(weo2p57areadCases.getCdn());
					weo2p57aLocal.setApStatusCd(weo2p57areadCases.getApStatusCd());
					weo2p57aLocal.setOosCaseType(weo2p57areadCases.getOosCaseType());
					weo2p57aLocal.setAfdcCaseNbr(weo2p57areadCases.getAfdcCaseNbr());
					weo2p57aLocal.setCaseStartDate(weo2p57areadCases.getCaseStartDate());
					weo2p57aLocal.setAssistType(weo2p57areadCases.getAssistType());
					weo2p57aLocal.setStatusChgDate(weo2p57areadCases.getStatusChgDate());
					weo2p57aLocal.setServiceType(weo2p57areadCases.getServiceType());
					weo2p57aLocal.setgApPin(weo2p57areadCases.getgApPin());
					weo2p57aLocal.setgCtPin(weo2p57areadCases.getgCtPin());
					weo2p57aBOReq.getGlobal().setgApPin(Integer.valueOf(weo2p57areadCases.getgApPin()));
					weo2p57aBOReq.getGlobal().setgCtPin(Integer.valueOf(weo2p57areadCases.getgCtPin()));

					if(weo2p57aLocal.getStatus() != null && "CLSD".equalsIgnoreCase(weo2p57aLocal.getStatus().trim()) 
							&& weo2p57aLocal.getFyEnd() != null && weo2p57aLocal.getStatusChgDate() != null && 
							weo2p57aLocal.getStatusChgDate().compareTo(weo2p57aLocal.getFyEnd()) < 0) {
						break;
					}
					query = "select COUNTRY_CODE  from WEOVADDRESS where PIN = '" + weo2p57aBOReq.getGlobal().getgApPin() + "' AND ADDRESS_TYPE = 'M'";
					weo2p57aBOResp = weo2p57aRepository.executeReadCasesQuery3(query);
					if(weo2p57aBOResp.getWeo2p57a() != null ){
						Weo2p57a weo2p57aWeovaddress = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
						weo2p57aLocal.setApCountry(weo2p57aWeovaddress.getApCountry());
					}
					query = "select COUNTRY_CODE  from WEOVADDRESS where PIN = '" + weo2p57aBOReq.getGlobal().getgCtPin() + "' AND ADDRESS_TYPE = 'M'";
					weo2p57aBOResp = weo2p57aRepository.executeReadCasesQuery4(query);
					if(weo2p57aBOResp.getWeo2p57a() != null ){
						Weo2p57a weo2p57aWeovaddressCc = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
						weo2p57aLocal.setCtCountry(weo2p57aWeovaddressCc.getCtCountry());
					}

					weo2p57aLocal.setCaseIda(String.valueOf(weo2p57aLocal.getCaseId())); // TODO ATMA commented Right justified
					weo2p57aLocal.setCaseIda(weo2p57aLocal.getCaseIda().replace(" ","0"));
					// RJL 11-07-07
					weo2p57aLocal.setTotalCasesRead(weo2p57aLocal.getTotalCasesRead() + 1);

					checkFyEndCaseStatus(weo2p57aLocal);

					if(weo2p57aLocal.getStatus() != null && "CLSD".equalsIgnoreCase(weo2p57aLocal.getStatus().trim())) {
						break;
					}
					// RJL ADDED 08-06-2010
					checkFyEndCaseType(weo2p57aLocal); 

					checkFyEndOosType(weo2p57aLocal);  

					if(weo2p57aLocal.getCaseType() != null && ("O".equalsIgnoreCase(weo2p57aLocal.getCaseType().trim())
							|| "Q".equalsIgnoreCase(weo2p57aLocal.getCaseType().trim()) 
							|| "K".equalsIgnoreCase(weo2p57aLocal.getCaseType().trim()))) {
						break;
					}
					weo2p57aLocal.setFlags(null);
					checkGrantAmount(weo2p57aLocal);

					if(weo2p57aLocal.getApStatusCd() != null && "OJ".equalsIgnoreCase(weo2p57aLocal.getApStatusCd().trim())) {
						calcLine3(weo2p57aLocal);
					} else {
						calcLine1(weo2p57aLocal);
					}
					// LINE 2 CALCS START HERE
					weo2p57aLocal.setAmount(0.0);
					weo2p57aLocal.setChSupArrs(0.0);
					weo2p57aLocal.setMedSupArrs(0.0);
					// 165371
					// 165371

					query =  "SELECT AMOUNT,START_DATE,END_DATE,OBLIGATION_TYPE, ORDER_TYPE,CS_EXTEND_18 "+    
							"FROM WEOVOBLIGATION A, WEOVFLM_HEARING B " +
							" WHERE A.CASE_ID = '"+ weo2p57aLocal.getCaseId() +"'"+
							" AND A.CASE_ID = B.CASE_ID"+
							" AND A.ENTRY_DATE = B.ENTRY_DATE"+
							" AND A.CIVIL_ACTION_NBR = B.CIVIL_ACTION_NBR"+
							" AND OBLIGATION_TYPE IN ('MS', 'CS', 'SS', 'CSJN', 'MSJN','CSJA',"+
							" 'MSJA','MMEI','MMEO','MSIN','MSJN','MSJO','MSJU','CMEI','CMEO',"+
							" 'CSIN','CSJO','CSJU')" +
							/*					" AND OBLIGATION_STATUS IN ('A', 'F', 'I', 'S')"+
					" AND START_DATE < "+ weo2p57a.getFyEnd() + */
					" AND A.ENTRY_DATE < '"+ weo2p57aLocal.getFyEnd() + "'"+
					" AND ORDER_TYPE NOT IN ('VO','EE')"+                        
					" ORDER BY OBLIGATION_TYPE";

					weo2p57aBOResp = weo2p57aRepository.executeReadCasesQuery5(query);
					if(weo2p57aBOResp.getWeo2p57a() != null){ 
						Weo2p57a weo2p57aResult = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
						weo2p57aLocal.setAmount(weo2p57aResult.getAmount());
						weo2p57aLocal.setStartDate(weo2p57aResult.getStartDate());
						weo2p57aLocal.setEndDate(weo2p57aResult.getEndDate());
						weo2p57aLocal.setObligationType(weo2p57aResult.getObligationType());
						weo2p57aLocal.setOrderType(weo2p57aResult.getOrderType());
						weo2p57aLocal.setCsExtend18(weo2p57aResult.getCsExtend18());
					}else{
						priorOblgStats(weo2p57aLocal);
						if(weo2p57aLocal.getChSupArrs() > 0 || weo2p57aLocal.getMedSupArrs() > 0) {
							weo2p57aLocal.setIncludeInLine2(true);
						} else {
							checkForHcOrders(weo2p57aLocal);
						}
						weo2p57aLocal.setObligationExists(false);
						if(weo2p57aLocal.isIncludeInLine2()) {
							calcLine2(weo2p57aLocal);
							return weo2p57aBOResp;
						} else {
							return weo2p57aBOResp;
						}
					}
					checkForCsjaMsjaOnlyCases(weo2p57aLocal);
					if(weo2p57aLocal.isNotOnly()) {
						checkLine2(weo2p57aLocal);
						calcLine2(weo2p57aLocal);
					}
					//
					weo2p57aList.add(weo2p57aLocal);
					updateOcse157(weo2p57aLocal);
				}

				/*		TODO ATMA commented
		//TODO WRITE/'*** RUN TOTALS ***''='#TOTAL-CASES-READ(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("*** RUN TOTALS *** =" + weo2p57a.setTotalCasesRead((zz9));
		//TODO WRITE/'*** LINE 1 TOTALS ***'
		LOGGER.info(/"*** LINE 1 TOTALS ***");
		//TODO WRITE'='#TOT-CASES-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.totCasesCurr(zz9));
		//TODO WRITE'='#TOT-CASES-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.totCasesFrmr(zz9));
		//TODO WRITE'='#TOT-CASES-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.totCasesNevr(zz9));
		//TODO WRITE'='#UI-CASES-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.uiCasesCurr(zz9));
		//TODO WRITE'='#UI-CASES-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.uiCasesFrmr(zz9));
		//TODO WRITE'='#UI-CASES-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.uiCasesNevr(zz9));
		//TODO WRITE'='#UR-CASES-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.urCasesCurr(zz9));
		//TODO WRITE'='#UR-CASES-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.urCasesFrmr(zz9));
		//TODO WRITE'='#UR-CASES-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.urCasesNevr(zz9));
		//TODO WRITE'='#TOT-M-CASES-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.totMCasesNevr(zz9));
		//TODO WRITE'='#TR-INIT-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trInitCurr(zz9));
		//TODO WRITE'='#TR-INIT-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trInitFrmr(zz9));
		//TODO WRITE'='#TR-INIT-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trInitNevr(zz9));
		//TODO WRITE'='#TR-REC-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trRecCurr(zz9));
		//TODO WRITE'='#TR-REC-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trRecFrmr(zz9));
		//TODO WRITE'='#TR-REC-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trRecNevr(zz9));
		//TODO WRITE'='#INTER-INIT(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.interInit(zz9));
		//TODO WRITE'='#INTER-REC(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.interRec(zz9));
		//TODO WRITE/'*** LINE 2 TOTALS ***'
		LOGGER.info(/"*** LINE 2 TOTALS ***");
		//TODO WRITE'='#CRTORD-CASES-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordCasesCurr(zz9));
		//TODO WRITE'='#CRTORD-CASES-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordCasesFrmr(zz9));
		//TODO WRITE'='#CRTORD-CASES-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordCasesNevr(zz9));
		//TODO WRITE'='#CRTORD-UI-CAS-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordUiCasCurr(zz9));
		//TODO WRITE'='#CRTORD-UI-CAS-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordUiCasFrmr(zz9));
		//TODO WRITE'='#CRTORD-UI-CAS-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordUiCasNevr(zz9));
		//TODO WRITE'='#CRTORD-UR-CAS-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordUrCasCurr(zz9));
		//TODO WRITE'='#CRTORD-UR-CAS-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordUrCasFrmr(zz9));
		//TODO WRITE'='#CRTORD-UR-CAS-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordUrCasNevr(zz9));
		//TODO WRITE'='#ZERO-ORD-CASE-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.zeroOrdCaseCurr(zz9));
		//TODO WRITE'='#ZERO-ORD-CASE-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.zeroOrdCaseFrmr(zz9));
		//TODO WRITE'='#ZERO-ORD-CASE-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.zeroOrdCaseNevr(zz9));
		//TODO WRITE'='#CRTORD-M-CAS-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.crtordMCasNevr(zz9));
		//TODO WRITE'='#ARRS-ONLY-ORDR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.arrsOnlyOrdr(zz9));
		//TODO WRITE'='#TR-INIT-ORDR-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trInitOrdrCurr(zz9));
		//TODO WRITE'='#TR-INIT-ORDR-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trInitOrdrFrmr(zz9));
		//TODO WRITE'='#TR-INIT-ORDR-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trInitOrdrNevr(zz9));
		//TODO WRITE'='#TR-REC-ORDR-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trRecOrdrCurr(zz9));
		//TODO WRITE'='#TR-REC-ORDR-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trRecOrdrFrmr(zz9));
		//TODO WRITE'='#TR-REC-ORDR-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.trRecOrdrNevr(zz9));
		//TODO WRITE'='#INTER-INIT-ORDR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.interInitOrdr(zz9));
		//TODO WRITE'='#INTER-REC-ORDR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.interRecOrdr(zz9));
		//TODO WRITE/'*** LINE 3 TOTALS ***'
		LOGGER.info(/"*** LINE 3 TOTALS ***");
		//TODO WRITE'='#NO-JURS-CASES-CURR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.noJursCasesCurr(zz9));
		//TODO WRITE'='#NO-JURS-CASES-FRMR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.noJursCasesFrmr(zz9));
		//TODO WRITE'='#NO-JURS-CASES-NEVR(EM=ZZZ,ZZZ,ZZ9)
		LOGGER.info("="weo2p57a.noJursCasesNevr(zz9));
		//
		//
				 */	
			}
		}
		catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method calcLine1
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO calcLine1(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			if(weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType())
					|| "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
				weo2p57aGlobal.setInitFips(null);
				weo2p57aGlobal.setRespFips(null);
				query = "SELECT RESP_FIPS_STATE FROM WEOVINTERSTATE WHERE WV_CASE = '" + weo2p57aGlobal.getCaseId() 
				+ "' AND CASE_OOS_IND IN ('II','UI') ORDER BY TIME_CREATED DESC";
				weo2p57aBOResp = weo2p57aRepository.executeCalcLine1Query6(query);
				if(weo2p57aBOResp.getWeo2p57a() != null ){
					Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
					weo2p57aGlobal.setRespFips(weo2p57alocal.getRespFips());
				}
				if(weo2p57aGlobal.getRespFips() != null && (weo2p57aGlobal.getRespFips().equalsIgnoreCase("8A") || 
						weo2p57aGlobal.getRespFips().equalsIgnoreCase("8B") || 
						weo2p57aGlobal.getRespFips().equalsIgnoreCase("8C") ||
						weo2p57aGlobal.getRespFips().equalsIgnoreCase("8D")) || 
						(NaturalUtil.isInteger(weo2p57aGlobal.getRespFips()) && 
								(Integer.valueOf(weo2p57aGlobal.getRespFips()) >= 80 && Integer.valueOf(weo2p57aGlobal.getRespFips()) <= 89))) {
					weo2p57aGlobal.setInterInit(weo2p57aGlobal.getInterInit() + 1);
				}
			}
			if(weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType())
					|| "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
				query = "SELECT INIT_FIPS_STATE FROM WEOVINTERSTATE WHERE WV_CASE = '" + weo2p57aGlobal.getCaseId() +
						"' AND CASE_OOS_IND IN ('IR','UR') ORDER BY TIME_CREATED DESC";
				weo2p57aBOResp = weo2p57aRepository.executeCalcLine1Query7(query);
				if(weo2p57aBOResp.getWeo2p57a() != null ){
					Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
					weo2p57aGlobal.setInitFips(weo2p57alocal.getInitFips());
				}
				if(weo2p57aGlobal.getInitFips() != null && (weo2p57aGlobal.getInitFips().equalsIgnoreCase("8A") || 
						weo2p57aGlobal.getInitFips().equalsIgnoreCase("8B") || weo2p57aGlobal.getInitFips().equalsIgnoreCase("8C") || 
						weo2p57aGlobal.getInitFips().equalsIgnoreCase("8D")) || (NaturalUtil.isInteger(weo2p57aGlobal.getInitFips()) && 
								(Integer.valueOf(weo2p57aGlobal.getInitFips()) >= 80 && Integer.valueOf(weo2p57aGlobal.getInitFips()) <= 89 ))) {
					weo2p57aGlobal.setInterRec(weo2p57aGlobal.getInterRec() + 1);
				}
			}
			if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("C")) {
				weo2p57aGlobal.setTotCasesCurr(weo2p57aGlobal.getTotCasesCurr() + 1);
				if(weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType())
						|| "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
					weo2p57aGlobal.setUiCasesCurr(weo2p57aGlobal.getUiCasesCurr() + 1);
					if(weo2p57aGlobal.getRespFips() != null && weo2p57aGlobal.getRespFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrInitCurr(weo2p57aGlobal.getTrInitCurr() + 1);
					}
				}
				if(weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) 
						|| "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
					weo2p57aGlobal.setUrCasesCurr(weo2p57aGlobal.getUrCasesCurr() + 1);
					if(weo2p57aGlobal.getInitFips() != null && weo2p57aGlobal.getInitFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrRecCurr(weo2p57aGlobal.getTrRecCurr() + 1);
					}
				}
			}
			if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("F")) {
				weo2p57aGlobal.setTotCasesFrmr(weo2p57aGlobal.getTotCasesFrmr() + 1);
				if(weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) 
						|| "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
					weo2p57aGlobal.setUiCasesFrmr(weo2p57aGlobal.getUiCasesFrmr() + 1);
					if(weo2p57aGlobal.getRespFips() != null && weo2p57aGlobal.getRespFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrInitFrmr(weo2p57aGlobal.getTrInitFrmr() + 1);
					}
				}
				if(weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType())
						|| "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
					weo2p57aGlobal.setUrCasesFrmr(weo2p57aGlobal.getUrCasesFrmr() + 1);
					if(weo2p57aGlobal.getInitFips() != null && weo2p57aGlobal.getInitFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrRecFrmr(weo2p57aGlobal.getTrRecFrmr() + 1);
					}
				}
			}
			if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("N")) {
				weo2p57aGlobal.setTotCasesNevr(weo2p57aGlobal.getTotCasesNevr() + 1);
				if(weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
					weo2p57aGlobal.setUiCasesNevr(weo2p57aGlobal.getUiCasesNevr() + 1);
					if(weo2p57aGlobal.getRespFips() != null && weo2p57aGlobal.getRespFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrInitNevr(weo2p57aGlobal.getTrInitNevr() + 1);
					}
				}
				if(weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) {
					weo2p57aGlobal.setUrCasesNevr(weo2p57aGlobal.getUrCasesNevr() + 1);
					if(weo2p57aGlobal.getInitFips() != null && weo2p57aGlobal.getInitFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrRecNevr(weo2p57aGlobal.getTrRecNevr() + 1);
					}
				}
			}
			if(weo2p57aGlobal.getCaseType() != null && weo2p57aGlobal.getCaseType().equalsIgnoreCase("M")) {
				if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("N") && !weo2p57aGlobal.isGrantAmountExists()) {
						weo2p57aGlobal.setTotMCasesNevr(weo2p57aGlobal.getTotMCasesNevr() + 1);
				}
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkLine2
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkLine2(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			priorOblgStats(weo2p57aGlobal);
			if(weo2p57aGlobal.getObligationType() != null && weo2p57aGlobal.getObligationType().equalsIgnoreCase("SS")) {
				if(weo2p57aGlobal.getChSupArrs() > 0 || weo2p57aGlobal.getMedSupArrs() > 0) {
					weo2p57aGlobal.setIncludeInLine2(true);
				}
			} else {
				weo2p57aGlobal.setIncludeInLine2(true);
			}
			if(weo2p57aGlobal.getCaseType() != null && weo2p57aGlobal.getCaseType().equalsIgnoreCase("M")) {
				if(!weo2p57aGlobal.isObligationExists() && (weo2p57aGlobal.getChSupArrs() > 0 || weo2p57aGlobal.getMedSupArrs() > 0)) {
					weo2p57aGlobal.setIncludeInLine2d(true);

				}
				if(weo2p57aGlobal.getObligationType() != null && (weo2p57aGlobal.getObligationType().equalsIgnoreCase("CS") 
						||  weo2p57aGlobal.getObligationType().equalsIgnoreCase("MS")) && !weo2p57aGlobal.isGrantAmountExists() ) {
						weo2p57aGlobal.setIncludeInLine2d(true);
					}
				if(weo2p57aGlobal.getObligationType() != null && weo2p57aGlobal.getObligationType().equalsIgnoreCase("SS")) {
					if(weo2p57aGlobal.getChSupArrs() > 0 || weo2p57aGlobal.getMedSupArrs() > 0) {
						weo2p57aGlobal.setIncludeInLine2d(true);
					}
				}
			}
			if(weo2p57aGlobal.getApStatusCd() != null && !weo2p57aGlobal.getApStatusCd().equalsIgnoreCase("OJ")) {
				checkHearing(weo2p57aGlobal);
			}
			if(weo2p57aGlobal.getAmount() == 0) {
				weo2p57aGlobal.setIncludeInLine2(true);
				checkChildAge(weo2p57aGlobal);
				if(weo2p57aGlobal.isChildUnderAge18() || weo2p57aGlobal.getCsExtend18() != null && weo2p57aGlobal.getCsExtend18().equalsIgnoreCase("Y")) {
					if((weo2p57aGlobal.getObligationType() != null && (weo2p57aGlobal.getObligationType().equalsIgnoreCase("CS") ||  weo2p57aGlobal.getObligationType().equalsIgnoreCase("MS")) || weo2p57aGlobal.isHearingExists()) && (weo2p57aGlobal.getEndDate().equalsIgnoreCase(" ") || weo2p57aGlobal.getEndDate().compareTo(weo2p57aGlobal.getFyEnd()) > 0 )) {
						weo2p57aGlobal.setIncludeInLine2c(true);
					}
				}
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method calcLine2
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO calcLine2(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			if(weo2p57aGlobal.getApStatusCd() != null && weo2p57aGlobal.getApStatusCd().equalsIgnoreCase("OJ")) {
				return weo2p57aBOResp;
			}
			if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("C")) {
				if(!weo2p57aGlobal.isIncludedInLine2()) {
					if(weo2p57aGlobal.isIncludeInLine2()) {
						weo2p57aGlobal.setCrtordCasesCurr(weo2p57aGlobal.getCrtordCasesCurr() + 1);
						weo2p57aGlobal.setIncludedInLine2(true);
					}
				}

				if((weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) && !weo2p57aGlobal.isIncludedInLine2a()) {
					weo2p57aGlobal.setCrtordUiCasCurr(weo2p57aGlobal.getCrtordUiCasCurr() + 1);
					weo2p57aGlobal.setIncludedInLine2a(true);
					if(weo2p57aGlobal.getRespFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrInitOrdrCurr(weo2p57aGlobal.getTrInitOrdrCurr() + 1);
					}
				}
				if((weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) && !weo2p57aGlobal.isIncludedInLine2b()) {
					weo2p57aGlobal.setCrtordUrCasCurr(weo2p57aGlobal.getCrtordUrCasCurr() + 1);
					weo2p57aGlobal.setIncludedInLine2b(true);
					if(weo2p57aGlobal.getInitFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrRecOrdrCurr(weo2p57aGlobal.getTrRecOrdrCurr() + 1);
					}
				}
				if(weo2p57aGlobal.isIncludeInLine2c() && !weo2p57aGlobal.isIncludedInLine2c()) {
					weo2p57aGlobal.setZeroOrdCaseCurr(weo2p57aGlobal.getZeroOrdCaseCurr() + 1);
					weo2p57aGlobal.setIncludedInLine2c(true);
				}
			}
			if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("F")) {
				if(!weo2p57aGlobal.isIncludedInLine2()) {
					if(weo2p57aGlobal.isIncludeInLine2()) {
						weo2p57aGlobal.setCrtordCasesFrmr(weo2p57aGlobal.getCrtordCasesFrmr() + 1);
						weo2p57aGlobal.setIncludedInLine2(true);
					}
				}
				if((weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) && !weo2p57aGlobal.isIncludedInLine2a()) {
					weo2p57aGlobal.setCrtordUiCasFrmr(weo2p57aGlobal.getCrtordUiCasFrmr() + 1);
					weo2p57aGlobal.setIncludedInLine2a(true);
					if(weo2p57aGlobal.getRespFips() != null && weo2p57aGlobal.getRespFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrInitOrdrFrmr(weo2p57aGlobal.getTrInitOrdrFrmr() + 1);
					}
				}
				if((weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) && !weo2p57aGlobal.isIncludedInLine2b()) {
					weo2p57aGlobal.setCrtordUrCasFrmr(weo2p57aGlobal.getCrtordUrCasFrmr() + 1);
					weo2p57aGlobal.setIncludedInLine2b(true);
					if(weo2p57aGlobal.getInitFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrRecOrdrCurr(weo2p57aGlobal.getTrRecOrdrCurr() + 1);
					}
				}
				if(weo2p57aGlobal.isIncludeInLine2c() && !weo2p57aGlobal.isIncludedInLine2c()) {
					weo2p57aGlobal.setZeroOrdCaseFrmr(weo2p57aGlobal.getZeroOrdCaseFrmr() + 1);
					weo2p57aGlobal.setIncludedInLine2c(true);
				}
			}
			if(weo2p57aGlobal.getAssistType() != null && weo2p57aGlobal.getAssistType().equalsIgnoreCase("N")) {
				if(!weo2p57aGlobal.isIncludedInLine2()) {
					if(weo2p57aGlobal.isIncludeInLine2()) {
						weo2p57aGlobal.setCrtordCasesNevr(weo2p57aGlobal.getCrtordCasesNevr() + 1);
						weo2p57aGlobal.setIncludedInLine2(true);
					}
				}
				if((weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) && !weo2p57aGlobal.isIncludedInLine2a()) {
					weo2p57aGlobal.setCrtordUiCasNevr(weo2p57aGlobal.getCrtordUiCasNevr() + 1);
					weo2p57aGlobal.setIncludedInLine2a(true);
					if(weo2p57aGlobal.getRespFips() != null && weo2p57aGlobal.getRespFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrInitOrdrNevr(weo2p57aGlobal.getTrInitOrdrNevr() + 1);
					}
				}
				if((weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))) &&  !weo2p57aGlobal.isIncludedInLine2b()) {
					weo2p57aGlobal.setCrtordUrCasNevr(weo2p57aGlobal.getCrtordUrCasNevr() + 1);
					weo2p57aGlobal.setIncludedInLine2b(true);
					if(weo2p57aGlobal.getInitFips() != null && weo2p57aGlobal.getInitFips().equalsIgnoreCase("90")) {
						weo2p57aGlobal.setTrRecOrdrCurr(weo2p57aGlobal.getTrRecOrdrCurr() + 1);
					}
				}
				if(weo2p57aGlobal.isIncludeInLine2c() && !weo2p57aGlobal.isIncludedInLine2c()) {
					weo2p57aGlobal.setZeroOrdCaseNevr(weo2p57aGlobal.getZeroOrdCaseNevr() + 1);
					weo2p57aGlobal.setIncludedInLine2c(true);
				}
				if(weo2p57aGlobal.isIncludeInLine2d() && !weo2p57aGlobal.isIncludedInLine2d()) {
					weo2p57aGlobal.setCrtordMCasNevr(weo2p57aGlobal.getCrtordMCasNevr() + 1);
					weo2p57aGlobal.setIncludedInLine2d(true);
				}
			}
			if(weo2p57aGlobal.isIncludeInLine2() && !weo2p57aGlobal.isIncludedInLine2h() && (weo2p57aGlobal.getRespFips() != null && ((weo2p57aGlobal.getRespFips().equalsIgnoreCase("8A") || 
					weo2p57aGlobal.getRespFips().equalsIgnoreCase("8B") || weo2p57aGlobal.getRespFips().equalsIgnoreCase("8C") || 
					weo2p57aGlobal.getRespFips().equalsIgnoreCase("8D")) || (NaturalUtil.isInteger(weo2p57aGlobal.getRespFips()) && 
							(Integer.valueOf(weo2p57aGlobal.getRespFips()) >= 80 && Integer.valueOf(weo2p57aGlobal.getRespFips()) <= 89))) && 
					(weo2p57aGlobal.getOosCaseType() != null && ("II".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UI".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))))) {
				weo2p57aGlobal.setInterInitOrdr(weo2p57aGlobal.getInterInitOrdr() + 1);
				weo2p57aGlobal.setIncludedInLine2h(true);
			}
			if(weo2p57aGlobal.isIncludeInLine2() && !weo2p57aGlobal.isIncludedInLine2i() && (weo2p57aGlobal.getInitFips() != null && ((weo2p57aGlobal.getInitFips().equalsIgnoreCase("8A") 
					|| weo2p57aGlobal.getInitFips().equalsIgnoreCase("8B") || weo2p57aGlobal.getInitFips().equalsIgnoreCase("8C") || 
					weo2p57aGlobal.getInitFips().equalsIgnoreCase("8D")) || (NaturalUtil.isInteger(weo2p57aGlobal.getInitFips()) && 
							(Integer.valueOf(weo2p57aGlobal.getInitFips()) >= 80 && Integer.valueOf(weo2p57aGlobal.getInitFips()) <= 89)))
					&& (weo2p57aGlobal.getOosCaseType() != null && ("IR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()) || "UR".equalsIgnoreCase(weo2p57aGlobal.getOosCaseType()))))) {
				weo2p57aGlobal.setInterRecOrdr(weo2p57aGlobal.getInterRecOrdr() + 1);
				weo2p57aGlobal.setIncludedInLine2i(true);
			}
			if(weo2p57aGlobal.getServiceType() != null && weo2p57aGlobal.getServiceType().equalsIgnoreCase("A") && !weo2p57aGlobal.isIncludedInLine2e() && (weo2p57aGlobal.getChSupArrs() > 0 || weo2p57aGlobal.getMedSupArrs() > 0) && weo2p57aGlobal.isIncludeInLine2()) {
				weo2p57aGlobal.setArrsOnlyOrdr(weo2p57aGlobal.getArrsOnlyOrdr() + 1);
				weo2p57aGlobal.setIncludedInLine2e(true);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method calcLine3
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO calcLine3(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			if(weo2p57aGlobal.getAssistType() != null &&  ("C").equalsIgnoreCase(weo2p57aGlobal.getAssistType())) {
				weo2p57aGlobal.setNoJursCasesCurr(weo2p57aGlobal.getNoJursCasesCurr() + 1);
			}
			if(weo2p57aGlobal.getAssistType() != null &&   ("F").equalsIgnoreCase(weo2p57aGlobal.getAssistType())) {
				weo2p57aGlobal.setNoJursCasesFrmr(weo2p57aGlobal.getNoJursCasesFrmr() + 1);
			}
			if(weo2p57aGlobal.getAssistType() != null &&  ("N").equalsIgnoreCase(weo2p57aGlobal.getAssistType())) {
				weo2p57aGlobal.setNoJursCasesNevr(weo2p57aGlobal.getNoJursCasesNevr() + 1);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method updateOcse157
	 * @param  weo2p57aGlobal
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO updateOcse157(Weo2p57a  weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		Ocse157 ocse157 = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();

			ocse157 = new Ocse157();
			ocse157.setFiscalYear(weo2p57aGlobal.getFiscalYear());
			ocse157.setFedFiscalQtr(new BigDecimal(weo2p57aGlobal.getFyQtr()));
			ocse157.setTotCasesCurr(new BigDecimal(weo2p57aGlobal.getTotCasesCurr()));
			ocse157.setTotCasesFrmr(new BigDecimal(weo2p57aGlobal.getTotCasesFrmr()));
			ocse157.setTotCasesNevr(new BigDecimal(weo2p57aGlobal.getTotCasesNevr()));
			ocse157.setUiCasesCurr(new BigDecimal(weo2p57aGlobal.getUiCasesCurr()));
			ocse157.setUiCasesFrmr(new BigDecimal(weo2p57aGlobal.getUiCasesFrmr()));
			ocse157.setUiCasesNevr(new BigDecimal(weo2p57aGlobal.getUiCasesNevr()));
			ocse157.setUrCasesCurr(new BigDecimal(weo2p57aGlobal.getUrCasesCurr()));
			ocse157.setUrCasesFrmr(new BigDecimal(weo2p57aGlobal.getUrCasesFrmr()));
			ocse157.setUrCasesNevr(new BigDecimal(weo2p57aGlobal.getUrCasesNevr()));
			ocse157.setCrtordCasesCurr(new BigDecimal(weo2p57aGlobal.getCrtordCasesCurr()));
			ocse157.setCrtordCasesFrmr(new BigDecimal(weo2p57aGlobal.getCrtordCasesFrmr()));
			ocse157.setCrtordCasesNevr(new BigDecimal(weo2p57aGlobal.getCrtordCasesNevr()));
			ocse157.setCrtordUiCasCurr(new BigDecimal(weo2p57aGlobal.getCrtordUiCasCurr()));
			ocse157.setCrtordUiCasFrmr(new BigDecimal(weo2p57aGlobal.getCrtordUiCasFrmr()));
			ocse157.setCrtordUiCasNevr(new BigDecimal(weo2p57aGlobal.getCrtordUiCasNevr()));
			ocse157.setCrtordUrCasCurr(new BigDecimal(weo2p57aGlobal.getCrtordUrCasCurr()));
			ocse157.setCrtordUrCasFrmr(new BigDecimal(weo2p57aGlobal.getCrtordUrCasFrmr()));
			ocse157.setCrtordUrCasNevr(new BigDecimal(weo2p57aGlobal.getCrtordUrCasNevr()));
			ocse157.setZeroOrdCaseCurr(new BigDecimal(weo2p57aGlobal.getZeroOrdCaseCurr()));
			ocse157.setZeroOrdCaseFrmr(new BigDecimal(weo2p57aGlobal.getZeroOrdCaseFrmr()));
			ocse157.setZeroOrdCaseNevr(new BigDecimal(weo2p57aGlobal.getZeroOrdCaseNevr()));
			ocse157.setCrtordMCasNevr(new BigDecimal(weo2p57aGlobal.getCrtordMCasNevr()));
			ocse157.setArrsOnlyOrdr(new BigDecimal(weo2p57aGlobal.getArrsOnlyOrdr()));
			ocse157.setTrInitCurr(new BigDecimal(weo2p57aGlobal.getTrInitCurr()));
			ocse157.setTrInitFrmr(new BigDecimal(weo2p57aGlobal.getTrInitFrmr()));
			ocse157.setTrInitNevr(new BigDecimal(weo2p57aGlobal.getTrInitNevr()));
			ocse157.setTrRecCurr(new BigDecimal(weo2p57aGlobal.getTrRecCurr()));
			ocse157.setTrRecFrmr(new BigDecimal(weo2p57aGlobal.getTrRecFrmr()));
			ocse157.setTrRecNevr(new BigDecimal(weo2p57aGlobal.getTrRecNevr()));
			ocse157.setTrInitOrdrCurr(new BigDecimal(weo2p57aGlobal.getTrInitOrdrCurr()));
			ocse157.setTrInitOrdrFrmr(new BigDecimal(weo2p57aGlobal.getTrInitOrdrFrmr()));
			ocse157.setTrInitOrdrNevr(new BigDecimal(weo2p57aGlobal.getTrInitOrdrNevr()));
			ocse157.setTrRecOrdrCurr(new BigDecimal(weo2p57aGlobal.getTrRecOrdrCurr()));
			ocse157.setTrRecOrdrFrmr(new BigDecimal(weo2p57aGlobal.getTrRecOrdrFrmr()));
			ocse157.setTrRecOrdrNevr(new BigDecimal(weo2p57aGlobal.getTrRecOrdrNevr()));
			ocse157.setInterInit(new BigDecimal(weo2p57aGlobal.getInterInit()));
			ocse157.setInterRec(new BigDecimal(weo2p57aGlobal.getInterRec()));
			ocse157.setInterInitOrdr(new BigDecimal(weo2p57aGlobal.getInterInitOrdr()));
			ocse157.setInterRecOrdr(new BigDecimal(weo2p57aGlobal.getInterRecOrdr()));
			ocse157.setNoJursCasesCurr(new BigDecimal(weo2p57aGlobal.getNoJursCasesCurr()));
			ocse157.setNoJursCasesFrmr(new BigDecimal(weo2p57aGlobal.getNoJursCasesFrmr()));
			ocse157.setNoJursCasesNevr(new BigDecimal(weo2p57aGlobal.getNoJursCasesNevr()));
			ocse157.setTotMCasesNevr(new BigDecimal(weo2p57aGlobal.getTotMCasesNevr()));
			ocse157.setTimeUpdated(weo2p57aGlobal.getChangedTime());
			ocse157.setUidUpdated(NaturalUtil.getCurrentProgram());
			ocse157List.add(ocse157);
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method calcActiveMonths
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO calcActiveMonths(Weo2p57aBO weo2p57aBOReq) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aBOReq);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			Weo2p57a weo2p57a = (Weo2p57a) weo2p57aBOReq.getFirst(weo2p57aBOReq.getWeo2p57a());

			weo2p57a.setMonthsActive(0);
			if(!weo2p57a.getCalcEnd().trim().isEmpty() && weo2p57a.getCalcEnd().compareTo(weo2p57a.getFyStart()) < 0) {
				return weo2p57aBOResp;
			}
			if(!weo2p57a.getCalcStart().trim().isEmpty() && weo2p57a.getCalcStart().compareTo(weo2p57a.getFyEnd()) > 0) {
				return weo2p57aBOResp;
			}
			if(weo2p57a.getCalcStart().compareTo(weo2p57a.getFyStart()) < 0 ) {
				weo2p57a.setCalcStart(weo2p57a.getFyStart());
			}
			if(weo2p57a.getCalcEnd().trim().isEmpty()  || weo2p57a.getCalcEnd().compareTo(weo2p57a.getFyEnd()) > 0) {
				weo2p57a.setCalcEnd(weo2p57a.getFyEnd());
			}
			weo2p57a.setMonthsActive(1 + ( ( weo2p57a.getCalcEndYyyyn() - weo2p57a.getCalcStartYyyyn()) * 12 ) + ( weo2p57a.getCalcEndMmn() - weo2p57a.getCalcStartMmn ()));
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method priorOblgStats
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO priorOblgStats(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aGlobal.setChSupArrs(0.0);
			weo2p57aGlobal.setMedSupArrs(0.0);
			weo2p57aGlobal.setSept(weo2p57aGlobal.getFyEnd());
			weo2p57aGlobal.setSeptDd("01");
			query = "SELECT TOT_A_CH_SUP_DELQ, A_CH_SUP_IN_GRACE,  TOT_A_MED_DUE, TOT_A_MEDICAL_RCVD, " +
					" TOT_A_MD_SUP_DELQ, A_MD_SUP_IN_GRACE, TOT_N_CH_SUP_DELQ, N_CH_SUP_IN_GRACE, TOT_N_MED_DUE, "+
					" TOT_N_MEDICAL_RCVD, TOT_N_MD_SUP_DELQ, N_MD_SUP_IN_GRACE, TOT_A_CS_DELQ_RCVD, TOT_A_MS_DELQ_RCVD,"+
					" A_CS_IN_GRACE_RCVD, A_MS_IN_GRACE_RCVD, TOT_N_CS_DELQ_RCVD, TOT_N_MS_DELQ_RCVD , N_CS_IN_GRACE_RCVD,"+
					" N_MS_IN_GRACE_RCVD, TOT_N_ARRS_CINT, TOT_N_ARRS_SINT, MTH_N_ARRS_CINT, TOT_N_MED_CINT,"+
					" TOT_N_MED_SINT, MTH_N_MED_CINT, TOT_A_ARRS_DUE, TOT_A_ARRS_RCVD, TOT_N_ARRS_DUE, TOT_N_ARRS_RCVD"+
					" FROM WEOVMTH_SUMMARY WHERE CASE_ID = '" + weo2p57aGlobal.getCaseId() + "'" +
					" AND  PRD_START_DATE = '" + weo2p57aGlobal.getSept() +"'";
			weo2p57aBOResp = weo2p57aRepository.executePriorOblgStatsQuery8(query);
			if(weo2p57aBOResp.getWeo2p57a() != null) {
				Weo2p57a weo2p57alocalWeovmthsummary = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setAfdcChSupDelq(weo2p57alocalWeovmthsummary.getAfdcChSupDelq());
				weo2p57aGlobal.setAfdcChSupInGrace(weo2p57alocalWeovmthsummary.getAfdcChSupInGrace());
				weo2p57aGlobal.setAfdcMedDue(weo2p57alocalWeovmthsummary.getAfdcMedDue());
				weo2p57aGlobal.setAfdcMedRcvd(weo2p57alocalWeovmthsummary.getAfdcMedRcvd());
				weo2p57aGlobal.setAfdcMdSupDelq(weo2p57alocalWeovmthsummary.getAfdcMdSupDelq());
				weo2p57aGlobal.setAfdcMdSupInGrace(weo2p57alocalWeovmthsummary.getAfdcMdSupInGrace());
				weo2p57aGlobal.setNafdcChSupDelq(weo2p57alocalWeovmthsummary.getNafdcChSupDelq());
				weo2p57aGlobal.setNafdcChSupInGrace(weo2p57alocalWeovmthsummary.getNafdcChSupInGrace());
				weo2p57aGlobal.setNafdcMedDue(weo2p57alocalWeovmthsummary.getNafdcMedDue());
				weo2p57aGlobal.setNafdcMedRcvd(weo2p57alocalWeovmthsummary.getNafdcMedRcvd());
				weo2p57aGlobal.setNafdcMdSupDelq(weo2p57alocalWeovmthsummary.getNafdcMdSupDelq());
				weo2p57aGlobal.setNafdcMdSupInGrace(weo2p57alocalWeovmthsummary.getNafdcMdSupInGrace());
				weo2p57aGlobal.setTotACsDelqRcvd(weo2p57alocalWeovmthsummary.getTotACsDelqRcvd());
				weo2p57aGlobal.setTotAMsDelqRcvd(weo2p57alocalWeovmthsummary.getTotAMsDelqRcvd());
				weo2p57aGlobal.setaCsInGraceRcvd(weo2p57alocalWeovmthsummary.getaCsInGraceRcvd());
				weo2p57aGlobal.setaMsInGraceRcvd(weo2p57alocalWeovmthsummary.getaMsInGraceRcvd());
				weo2p57aGlobal.setTotNCsDelqRcvd(weo2p57alocalWeovmthsummary.getTotNCsDelqRcvd());
				weo2p57aGlobal.setTotNMsDelqRcvd(weo2p57alocalWeovmthsummary.getTotNMsDelqRcvd());
				weo2p57aGlobal.setnCsInGraceRcvd(weo2p57alocalWeovmthsummary.getnCsInGraceRcvd());
				weo2p57aGlobal.setnMsInGraceRcvd(weo2p57alocalWeovmthsummary.getnMsInGraceRcvd());
				weo2p57aGlobal.setTotNArrsCint(weo2p57alocalWeovmthsummary.getTotNArrsCint());
				weo2p57aGlobal.setTotNArrsSint(weo2p57alocalWeovmthsummary.getTotNArrsSint());
				weo2p57aGlobal.setMthNArrsCint(weo2p57alocalWeovmthsummary.getMthNArrsCint());
				weo2p57aGlobal.setTotNMedCint(weo2p57alocalWeovmthsummary.getTotNMedCint());
				weo2p57aGlobal.setTotNMedSint(weo2p57alocalWeovmthsummary.getTotNMedSint());
				weo2p57aGlobal.setMthNMedCint(weo2p57alocalWeovmthsummary.getMthNMedCint());
				weo2p57aGlobal.setTotAArrsDue(weo2p57alocalWeovmthsummary.getTotAArrsDue());
				weo2p57aGlobal.setTotAArrsRcvd(weo2p57alocalWeovmthsummary.getTotAArrsRcvd());
				weo2p57aGlobal.setTotNArrsDue(weo2p57alocalWeovmthsummary.getTotNArrsDue());
				weo2p57aGlobal.setTotNArrsRcvd(weo2p57alocalWeovmthsummary.getTotNArrsRcvd());
			}else{
				return weo2p57aBOResp;
			}

			query = "SELECT TC_ARS_DUE,         TC_ARS_RCV,         TC_CH_SUP_DEL,"+
					" TC_CS_DEL_RCV,      U_ARS_DUE,          U_ARS_RCV,"+
					" U_CH_SUP_DEL,       U_CS_DEL_RCV,       N_ARS_CINT_RCV,"+
					" N_ARS_SINT_RCV,     MTH_N_ARS_INT_RCV,  TC_ARS_CINT,"+
					" TC_ARS_CINT_RCV,    TC_ARS_SINT,        TC_ARS_SINT_RCV,"+
					" MTH_TC_ARS_INT,     MTH_TC_ARS_INT_RCV, U_ARS_CINT,"+
					" U_ARS_CINT_RCV,     U_ARS_SINT,         U_ARS_SINT_RCV,"+
					" MTH_U_ARS_INT,      MTH_U_ARS_INT_RCV,  TC_CH_SUP_IN_GRACE,"+
					" TC_CS_IN_GRACE_RCV, U_CH_SUP_IN_GRACE,  U_CS_IN_GRACE_RCV,"+
					" N_MED_CINT_RCV,     N_MED_SINT_RCV,     MTH_N_MED_INT_RCV "+
					" FROM WEOVMTH_SUMMARY_PW WHERE CASE_ID = '" + weo2p57aGlobal.getCaseId() + "'"+
					" AND  PRD_START_DATE = '" + weo2p57aGlobal.getSept() +"'";

			weo2p57aBOResp = weo2p57aRepository.executePriorOblgStatsQuery9(query);
			if(weo2p57aBOResp.getWeo2p57a() != null){
				Weo2p57a weo2p57alocalWeovmthsummarypw = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setTcArsDue(weo2p57alocalWeovmthsummarypw.getTcArsDue());
				weo2p57aGlobal.setTcArsRcv(weo2p57alocalWeovmthsummarypw.getTcArsRcv());
				weo2p57aGlobal.setTcChSupDel(weo2p57alocalWeovmthsummarypw.getTcChSupDel());
				weo2p57aGlobal.setTcCsDelRcv(weo2p57alocalWeovmthsummarypw.getTcCsDelRcv());
				weo2p57aGlobal.setuArsDue(weo2p57alocalWeovmthsummarypw.getuArsDue());
				weo2p57aGlobal.setuArsRcv(weo2p57alocalWeovmthsummarypw.getuArsRcv());
				weo2p57aGlobal.setuChSupDel(weo2p57alocalWeovmthsummarypw.getuChSupDel());
				weo2p57aGlobal.setuCsDelRcv(weo2p57alocalWeovmthsummarypw.getuCsDelRcv());
				weo2p57aGlobal.setnArsCintRcv(weo2p57alocalWeovmthsummarypw.getnArsCintRcv());
				weo2p57aGlobal.setnArsSintRcv(weo2p57alocalWeovmthsummarypw.getnArsSintRcv());
				weo2p57aGlobal.setMthNArsIntRcv(weo2p57alocalWeovmthsummarypw.getMthNArsIntRcv());
				weo2p57aGlobal.setTcArsCint(weo2p57alocalWeovmthsummarypw.getTcArsCint());
				weo2p57aGlobal.setTcArsCintRcv(weo2p57alocalWeovmthsummarypw.getTcArsCintRcv());
				weo2p57aGlobal.setTcArsSint(weo2p57alocalWeovmthsummarypw.getTcArsSint());
				weo2p57aGlobal.setTcArsSintRcv(weo2p57alocalWeovmthsummarypw.getTcArsSintRcv());
				weo2p57aGlobal.setMthTcArsInt(weo2p57alocalWeovmthsummarypw.getMthTcArsInt());
				weo2p57aGlobal.setMthTcArsIntRcv(weo2p57alocalWeovmthsummarypw.getMthTcArsIntRcv());
				weo2p57aGlobal.setuArsCint(weo2p57alocalWeovmthsummarypw.getuArsCint());
				weo2p57aGlobal.setuArsCintRcv(weo2p57alocalWeovmthsummarypw.getuArsCintRcv());
				weo2p57aGlobal.setuArsSint(weo2p57alocalWeovmthsummarypw.getuArsSint());
				weo2p57aGlobal.setuArsSintRcv(weo2p57alocalWeovmthsummarypw.getuArsSintRcv());
				weo2p57aGlobal.setMthUArsInt(weo2p57alocalWeovmthsummarypw.getMthUArsInt());
				weo2p57aGlobal.setMthUArsIntRcv(weo2p57alocalWeovmthsummarypw.getMthUArsIntRcv());
				weo2p57aGlobal.setTcChSupInGrace(weo2p57alocalWeovmthsummarypw.getTcChSupInGrace());
				weo2p57aGlobal.setTcCsInGraceRcv(weo2p57alocalWeovmthsummarypw.getTcCsInGraceRcv());
				weo2p57aGlobal.setuChSupInGrace(weo2p57alocalWeovmthsummarypw.getuChSupInGrace());
				weo2p57aGlobal.setuCsInGraceRcv(weo2p57alocalWeovmthsummarypw.getuCsInGraceRcv());
				weo2p57aGlobal.setnMedCintRcv(weo2p57alocalWeovmthsummarypw.getnMedCintRcv());
				weo2p57aGlobal.setnMedSintRcv(weo2p57alocalWeovmthsummarypw.getnMedSintRcv());
				weo2p57aGlobal.setMthNMedIntRcv(weo2p57alocalWeovmthsummarypw.getMthNMedIntRcv());
			}else{
				return weo2p57aBOResp;
			}

			weo2p57aGlobal.setChSupArrs(weo2p57aGlobal.getTotAArrsDue() - weo2p57aGlobal.getTotAArrsRcvd() + weo2p57aGlobal.getTotNArrsDue() -
					weo2p57aGlobal.getTotNArrsRcvd() + weo2p57aGlobal.getAfdcChSupDelq() - weo2p57aGlobal.getTotACsDelqRcvd() + 
					weo2p57aGlobal.getAfdcChSupInGrace() - weo2p57aGlobal.getaCsInGraceRcvd() + weo2p57aGlobal.getNafdcChSupDelq() - 
					weo2p57aGlobal.getTotNCsDelqRcvd() + weo2p57aGlobal.getNafdcChSupInGrace() - weo2p57aGlobal.getnCsInGraceRcvd() + 
					weo2p57aGlobal.getTotNArrsCint() - weo2p57aGlobal.getnArsCintRcv() + weo2p57aGlobal.getTotNArrsSint() - 
					weo2p57aGlobal.getnArsSintRcv() + weo2p57aGlobal.getMthNArrsCint() - weo2p57aGlobal.getMthNArsIntRcv() + 
					weo2p57aGlobal.getTcArsDue() - weo2p57aGlobal.getTcArsRcv() + weo2p57aGlobal.getTcChSupDel() - 
					weo2p57aGlobal.getTcCsDelRcv() + weo2p57aGlobal.getTcChSupInGrace() - weo2p57aGlobal.getTcCsInGraceRcv() + 
					weo2p57aGlobal.getuArsDue() - weo2p57aGlobal.getuArsRcv() + weo2p57aGlobal.getuChSupDel() - 
					weo2p57aGlobal.getuCsDelRcv() + weo2p57aGlobal.getuChSupInGrace() - weo2p57aGlobal.getuCsInGraceRcv() + 
					weo2p57aGlobal.getuArsCint() - weo2p57aGlobal.getuArsCintRcv() + 
					weo2p57aGlobal.getuArsSint() - weo2p57aGlobal.getuArsSintRcv() + weo2p57aGlobal.getMthUArsInt() - weo2p57aGlobal.getMthUArsIntRcv());

			if(weo2p57aGlobal.getAssistType() != null && !("C").equalsIgnoreCase(weo2p57aGlobal.getAssistType())) {
				weo2p57aGlobal.setChSupArrs(weo2p57aGlobal.getChSupArrs() + weo2p57aGlobal.getTcArsCint() - weo2p57aGlobal.getTcArsCintRcv() +
						weo2p57aGlobal.getTcArsSint() - weo2p57aGlobal.getTcArsSintRcv() + weo2p57aGlobal.getMthTcArsInt() - weo2p57aGlobal.getMthTcArsIntRcv());
			}
			weo2p57aGlobal.setMedSupArrs(weo2p57aGlobal.getAfdcMedDue() - weo2p57aGlobal.getAfdcMedRcvd() + weo2p57aGlobal.getAfdcMdSupDelq() -
					weo2p57aGlobal.getTotAMsDelqRcvd() + weo2p57aGlobal.getAfdcMdSupInGrace() - weo2p57aGlobal.getaMsInGraceRcvd() + weo2p57aGlobal.getNafdcMedDue()
					- weo2p57aGlobal.getNafdcMedRcvd() + weo2p57aGlobal.getNafdcMdSupDelq() - weo2p57aGlobal.getTotNMsDelqRcvd() + weo2p57aGlobal.getNafdcMdSupInGrace() 
					- weo2p57aGlobal.getnMsInGraceRcvd() + weo2p57aGlobal.getTotNMedCint() - weo2p57aGlobal.getnMedCintRcv() + weo2p57aGlobal.getTotNMedSint() 
					- weo2p57aGlobal.getnMedSintRcv() + weo2p57aGlobal.getMthNMedCint() - weo2p57aGlobal.getMthNMedIntRcv());
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkForHcOrders
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkForHcOrders(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			// RJL 130876
			query = " SELECT 1 FROM WEOVFLM_HEARING A, WEOVCIV_ACT_NBR B, WEOVCIV_ACT_CHILD C, WEOVCASE_CHILD D "+
					" WHERE A.CASE_ID = '"+  weo2p57aGlobal.getCaseId() + "' AND A.ORDER_TYPE = 'HC' "+
					" AND B.CIVIL_ACTION_STAT = 'A' AND A.CIVIL_ACTION_NBR = B.CIVIL_ACTION_NBR"+
					" AND B.CIVIL_ACTION_NBR = C.CIVIL_ACTION_NBR AND A.CASE_ID = B.CASE_ID"+
					" AND B.CASE_ID = C.CASE_ID AND C.CHILD_PIN = D.PIN AND D.IV_D_REMOVAL_RSN = ' '";

			weo2p57aBOResp = weo2p57aRepository.executeCheckForHcOrdersQuery10(query);
			if(weo2p57aBOResp.getWeo2p57a() != null) {
				Weo2p57a weo2p57acheckForHcOrders = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setExists(weo2p57acheckForHcOrders.getExists());
			}
			if(weo2p57aGlobal.getExists() > 0) {
				weo2p57aGlobal.setIncludeInLine2(true);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkFyEndCaseStatus
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkFyEndCaseStatus(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			// RJL NEW 08-06-2010
			query = "SELECT OLD_VALUE, TIME_OF_EVENT FROM WEOVCAS_PER_TRACK WHERE DATA_AUDIT_ID = '" +  weo2p57aGlobal.getCaseId() +"'"+
					" AND EVENT_TYPE = 'CS' " +
					" AND DATA_AUDIT_TYPE = 'C' " +
					" AND TIME_OF_EVENT > '" + weo2p57aGlobal.getFyEndTimestamp().trim() + "'" +
					" ORDER BY TIME_OF_EVENT";
			weo2p57aBOResp = weo2p57aRepository.executeCheckFyEndCaseStatusQuery11(query);
			if(weo2p57aBOResp.getWeo2p57a() != null){
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setOldValueCs(weo2p57alocal.getOldValueCs());
				weo2p57aGlobal.setTimeOfEvent(weo2p57alocal.getTimeOfEvent());
			}else{
				weo2p57aGlobal.setStatus(weo2p57aGlobal.getOldCaseStatus());
			}

		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkFyEndCaseType
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkFyEndCaseType(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aGlobal.setMoved(false);
			query = " SELECT OLD_VALUE, NEW_VALUE, TIME_OF_EVENT FROM WEOVCAS_PER_TRACK WHERE DATA_AUDIT_ID = '" +  weo2p57aGlobal.getCaseId() + "'" +
					" AND EVENT_TYPE = 'CT' " +
					" AND DATA_AUDIT_TYPE = 'C' " +
					" AND TIME_OF_EVENT BETWEEN '" + weo2p57aGlobal.getFyStartTimestamp() + "' AND '" + weo2p57aGlobal.getFyEndTimestamp() + "'" +
					" ORDER BY TIME_OF_EVENT DESC";

			weo2p57aBOResp = weo2p57aRepository.executeCheckFyEndCaseTypeQuery12(query);
			if(weo2p57aBOResp.getWeo2p57a() != null){
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setOldValue(weo2p57alocal.getOldValue());
				weo2p57aGlobal.setNewValue(weo2p57alocal.getNewValue());
				weo2p57aGlobal.setTimeOfEvent(weo2p57alocal.getTimeOfEvent());
			}else{
				return weo2p57aBOResp;
			}

			if(weo2p57aGlobal.getNewTypeDate() != null && weo2p57aGlobal.getFyEnd() != null &&
					weo2p57aGlobal.getNewTypeDate().compareTo(weo2p57aGlobal.getFyEnd()) <= 0) {
				weo2p57aGlobal.setMoved(true);
				weo2p57aGlobal.setCaseType(weo2p57aGlobal.getNewCaseType());
				return weo2p57aBOResp;
			}
			if(weo2p57aGlobal.getNewTypeDate() != null && weo2p57aGlobal.getFyEnd() != null &&
					weo2p57aGlobal.getNewTypeDate().compareTo(weo2p57aGlobal.getFyEnd()) > 0) {
				weo2p57aGlobal.setMoved(true);
				weo2p57aGlobal.setCaseType(weo2p57aGlobal.getOldCaseType());
				return weo2p57aBOResp;
			}
			// RJL 10-10-2007
			if(weo2p57aGlobal.isMoved()) {
				return weo2p57aBOResp;
			}

			query = " SELECT OLD_VALUE, TIME_OF_EVENT FROM WEOVCAS_PER_TRACK WHERE DATA_AUDIT_ID = '" + weo2p57aGlobal.getCaseId() + "'" +
					" AND EVENT_TYPE = 'CT' " +
					" AND DATA_AUDIT_TYPE = 'C' " +
					" AND TIME_OF_EVENT > '" + weo2p57aGlobal.getFyEndTimestamp() +"'"+
					" ORDER BY TIME_OF_EVENT ";

			weo2p57aBOResp = weo2p57aRepository.executeCheckFyEndCaseTypeQuery13(query);
			if(weo2p57aBOResp.getWeo2p57a() != null){
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setOldValue(weo2p57alocal.getOldValue());
				weo2p57aGlobal.setTimeOfEvent(weo2p57alocal.getTimeOfEvent());
			}else{
				weo2p57aGlobal.setCaseType(weo2p57aGlobal.getOldValue());
			}

		}
		catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkFyEndOosType
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkFyEndOosType(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			query = "select OLD_VALUE , TIME_OF_EVENT FROM WEOVCAS_PER_TRACK WHERE DATA_AUDIT_ID = '" +  weo2p57aGlobal.getCaseId() + "'" +
					" AND DATA_AUDIT_TYPE = 'C' "+
					" AND EVENT_TYPE = 'OS' " +
					" AND TIME_OF_EVENT > '" + weo2p57aGlobal.getFyEndTimestamp() + "'" +
					" ORDER BY TIME_OF_EVENT";

			weo2p57aBOResp = weo2p57aRepository.executeCheckFyEndOosTypeQuery14(query);
			if(weo2p57aBOResp.getWeo2p57a() != null){
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setOldValueOos(weo2p57alocal.getOldValueOos());
				weo2p57aGlobal.setTimeOfEvent(weo2p57alocal.getTimeOfEvent());
			}else{
				weo2p57aGlobal.setOosCaseType(weo2p57aGlobal.getOldOosType());
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkChildAge
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkChildAge(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aGlobal.setChildUnderAge18(false);
			query = "SELECT BIRTHDATE  FROM WEOVPERSON P , WEOVCASECHILD C WHERE C.CASE_ID = '" + weo2p57aGlobal.getCaseId() + "'" +
					" AND P.PIN = C.PIN ";
			weo2p57aBOResp = weo2p57aRepository.executeCheckChildAgeQuery15(query);
			if(weo2p57aBOResp != null){
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setChildDob(weo2p57alocal.getChildDob());
			}else{
				weo2p57aGlobal.setChildUnderAge18(false);
			}
			weo2p57aGlobal.setDateVar2(MappingHelper.getDatefromString(weo2p57aGlobal.getFyEnd(),AppConstants.DATEFORMAT2));
			weo2p57aGlobal.setDateVar(MappingHelper.getDatefromString(weo2p57aGlobal.getChildDob(),AppConstants.DATEFORMAT2));
			weo2p57aGlobal.setChildAge(MappingHelper.getDay(weo2p57aGlobal.getDateVar2()) - MappingHelper.getDay(weo2p57aGlobal.getDateVar()));
			if(weo2p57aGlobal.getChildAge() <= 6574) {
				weo2p57aGlobal.setChildUnderAge18(true);
				return weo2p57aBOResp;
			}
		}
		catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkHearing
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkHearing(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			query = "SELECT 1  FROM WEOVORDER O , WEOVFLM_HEARING H WHERE O.CASE_ID = '" + weo2p57aGlobal.getCaseId() + "' "
					+ " AND H.CASE_ID = O.CASE_ID AND H.INSU_ORDERED_TYPE IN ('IO','IP','PO','BO')";
			weo2p57aBOResp = weo2p57aRepository.executeCheckHearingQuery16(query);
			if(weo2p57aBOResp.getWeo2p57a() != null) {
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setInsuOrderedCount(weo2p57alocal.getInsuOrderedCount());
			}else{
				return weo2p57aBOResp;
			}
			weo2p57aGlobal.setIncludeInLine2(true);
			weo2p57aGlobal.setHearingExists(true);
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkGrantAmount
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkGrantAmount(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			query = "SELECT START_DATE FROM WEOVGRANT_AMOUNT WHERE IVA_CASE_ID = '" + weo2p57aGlobal.getAfdcCaseNbr() +"'";
			weo2p57aBOResp = weo2p57aRepository.executeCheckGrantAmountQuery17(query); 
			if(weo2p57aBOResp.getWeo2p57a() != null ) {
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setGrantStart(weo2p57alocal.getGrantStart());
			}else{
				weo2p57aGlobal.setGrantAmountExists(false);
				return weo2p57aBOResp;	
			}

			if((weo2p57aGlobal.getCdn2() != null && weo2p57aGlobal.getCdn2().equalsIgnoreCase("01")) || 
					(weo2p57aGlobal.getGrantStart() != null && weo2p57aGlobal.getGrantStart().compareTo(weo2p57aGlobal.getCaseStartDate()) > 0 && 
					weo2p57aGlobal.getGrantStart().compareTo(weo2p57aGlobal.getFyEnd()) <= 0)) {
				weo2p57aGlobal.setGrantAmountExists(true);
				return weo2p57aBOResp;
			} else {
				weo2p57aGlobal.setGrantAmountExists(false);
			}
		}
		catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method checkForCsjaMsjaOnlyCases
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO checkForCsjaMsjaOnlyCases(Weo2p57a weo2p57aGlobal) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+ weo2p57aGlobal);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			query = "SELECT 1 FROM WEOVOBLIGATION A, WEOVFLM_HEARING B WHERE OBLIGATION_TYPE IN ('MSJA','CSJA') AND " +
					" OBLIGATION_STATUS = 'A' AND A.CASE_ID = '" + weo2p57aGlobal.getCaseId()  + "'" +
					" AND A.CASE_ID = B.CASE_ID " +
					" AND A.ENTRY_DATE = B.ENTRY_DATE " +
					" AND A.CIVIL_ACTION_NBR = B.CIVIL_ACTION_NBR " +
					" AND ORDER_TYPE NOT IN ('VO','EE')";

			weo2p57aBOResp = weo2p57aRepository.executeCheckForCsjaMsjaOnlyCasesQuery18(query);
			if(weo2p57aBOResp.getWeo2p57a() != null ) {
				Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
				weo2p57aGlobal.setOblgCnt(weo2p57alocal.getOblgCnt());
			}
			if(weo2p57aGlobal.getOblgCnt() > 0) {
				query =  "SELECT OBLIGATION_TYPE FROM WEOVOBLIGATION A, WEOVFLM_HEARING B WHERE "+
						" A.CASE_ID = '" + weo2p57aGlobal.getCaseId() + "' AND A.CASE_ID = B.CASE_ID "+
						" AND A.ENTRY_DATE = B.ENTRY_DATE AND A.CIVIL_ACTION_NBR = B.CIVIL_ACTION_NBR "+
						" AND ORDER_TYPE NOT IN ('VO','EE') " ;           
				weo2p57aBOResp = weo2p57aRepository.executeCheckForCsjaMsjaOnlyCasesQuery19(query);
				if(weo2p57aBOResp.getWeo2p57a() != null ) {
					Weo2p57a weo2p57alocal = (Weo2p57a) weo2p57aBOResp.getFirst(weo2p57aBOResp.getWeo2p57a());
					weo2p57aGlobal.setOblgType(weo2p57alocal.getOblgType());
				}
				if(weo2p57aGlobal.getOblgType() != null && (weo2p57aGlobal.getOblgType().equalsIgnoreCase("CSJA") 
						|| weo2p57aGlobal.getOblgType().equalsIgnoreCase("MSJA"))) {
					weo2p57aGlobal.setNotOnly(true);
					return weo2p57aBOResp;
				} else {
					weo2p57aGlobal.setNotOnly(false);
				}
			} else {
				weo2p57aGlobal.setNotOnly(true);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method lockTables
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO lockTables(Weo2p57aBO weo2p57aBOReq) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aBOReq);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			weo2p57aBOResp =  new Weo2p57aBO();
			Weo2p57a weo2p57a = (Weo2p57a) weo2p57aBOReq.getFirst(weo2p57aBOReq.getWeo2p57a());
			List<String> viewArrayLocal = new ArrayList<>();
			//
			weo2p57a.setNbrOfTables(7);
			viewArrayLocal.add("WEOVCASE");
			viewArrayLocal.add("WEOVPERSON_AP");
			viewArrayLocal.add("WEOVOBLIGATION");
			viewArrayLocal.add("WEOVCAS_PER_TRACK");
			viewArrayLocal.add("WEOVMTH_SUMMARY");
			viewArrayLocal.add("WEOVMTH_SUMMARY_PW");
			viewArrayLocal.add("WEOVGRANT_AMOUNT");
			weo2p57a.setViewArray(viewArrayLocal);
			/*TODO ATMA commented        lockTableForBatch(weo2p57aBOResp);*/
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}

	/**
	 * Method resynchAndRestart
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarBusinessException
	 */
	public Weo2p57aBO resynchAndRestart(Weo2p57aBO weo2p57aBOReq) throws OscarBusinessException {
		LOGGER.debug(AppConstants.REQUEST+weo2p57aBOReq);
		Weo2p57aBO weo2p57aBOResp = null;
		try {
			IWeo0cberService weo0cber  = new Weo0cberServiceImpl();
			weo0cber.execute(weo2p57aBOReq);
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR+ ex);
			throw new OscarBusinessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
}