package com.swv.oscar.repositories.impl;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.swv.oscar.dataobject.batch.Weo0cberBO;
import com.swv.oscar.domain.entity.WeovrestartData2;
import com.swv.oscar.exceptions.OscarDataAccessException;
import com.swv.oscar.repositories.IWeo0cberRepository;
import com.swv.oscar.shared.set.AppConstants;
import com.swv.oscar.util.OscarLogger;

/*************************************************************************
 *
 * SWV CONFIDENTIAL
 * _________________________________________________________________________________
 *
 * SWV is a trademark of SWV Company.
 *
 *Copyright © 2017 SWV. All rights reserved.
 *
 * NOTICE: All information contained herein is, and remains the property of SWV
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SWV and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SWV.
 *
 *************************************************************************/
// Author : Generated by ATMA ®
// Revision History :
@Repository
public class Weo0cberRepositoryImpl implements IWeo0cberRepository {

    private static final OscarLogger LOGGER = OscarLogger.create(Weo0cberRepositoryImpl.class);

    @PersistenceContext
    private EntityManager entityMgr;

    /*
      * Method executeUpdateQuery0
      * @param weo0cberBOReq
      * @return weo0cberBOResp
      * @throws OscarDataAccessException
    */
    @Override
    @Transactional
    public Weo0cberBO executeUpdateQuery0(String query) throws OscarDataAccessException {
        LOGGER.debug(AppConstants.REQUEST+ query);
        Weo0cberBO  weo0cberBOResp = new Weo0cberBO();
        try {
            TypedQuery<WeovrestartData2> typedQuery = (TypedQuery<WeovrestartData2>)entityMgr.createNativeQuery(query,WeovrestartData2.class);
            typedQuery.executeUpdate();
        } catch (Exception ex) {
            LOGGER.error(AppConstants.ERROR + ex);
            throw new OscarDataAccessException(ex);
        }
        LOGGER.debug(AppConstants.RESPONSE+weo0cberBOResp);
        return weo0cberBOResp;
    }
}