package com.swv.oscar.repositories.impl;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.swv.oscar.dataobject.batch.Weo2p57a;
import com.swv.oscar.dataobject.batch.Weo2p57aBO;
import com.swv.oscar.domain.entity.WeovcasPerTrack;
import com.swv.oscar.domain.entity.Weovocse157;
import com.swv.oscar.exceptions.OscarDataAccessException;
import com.swv.oscar.repositories.IWeo2p57aRepository;
import com.swv.oscar.shared.set.AppConstants;
import com.swv.oscar.util.OscarLogger;

/*************************************************************************
 *
 * SWV CONFIDENTIAL
 * _________________________________________________________________________________
 *
 * SWV is a trademark of SWV Company.
 *
 *Copyright © 2017 SWV. All rights reserved.
 *
 * NOTICE: All information contained herein is, and remains the property of SWV
 * and its suppliers, if any. The intellectual and technical concepts contained
 * herein are proprietary to SWV and its suppliers and may be covered by U.S.
 * and Foreign Patents, patents in process, and are protected by trade secret or
 * copyright law. Dissemination of this information or reproduction of this
 * material is strictly forbidden unless prior written permission is obtained
 * from SWV.
 *
 *************************************************************************/
// Author : Generated by ATMA ®
// Revision History :
@Repository
public class Weo2p57aRepositoryImpl implements IWeo2p57aRepository {

	private static final OscarLogger LOGGER = OscarLogger.create(Weo2p57aRepositoryImpl.class);

	@PersistenceContext
	private EntityManager entityMgr;

	/*
	 * Method executeQuery0
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeQuery0(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovocse157Local : entityList){
					Object objectLocal = (Object) weovocse157Local;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setCnt(Integer.valueOf(objectLocal.toString().trim()));
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeUpdateQuery1
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	@Transactional
	public Weo2p57aBO executeUpdateQuery1(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		try {
			TypedQuery<Weovocse157> typedQuery = (TypedQuery<Weovocse157>)entityMgr.createNativeQuery(query);
			typedQuery.executeUpdate();
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeReadCasesQuery2
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeReadCasesQuery2(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object readCasesLocal : entityList){
					Object[] objectLocal = (Object[]) readCasesLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setCaseId(Integer.valueOf(objectLocal[0].toString().trim()));
					}
					if(objectLocal[1] != null){
						weo2p57a.setCaseType(objectLocal[1].toString().trim());
					}
					if(objectLocal[2] != null){
						weo2p57a.setStatus(objectLocal[2].toString().trim());
					}
					if(objectLocal[3] != null){
						weo2p57a.setCdn(objectLocal[3].toString().trim());
					}
					if(objectLocal[4] != null){
						weo2p57a.setApStatusCd(objectLocal[4].toString().trim());
					}
					if(objectLocal[5] != null){
						weo2p57a.setOosCaseType(objectLocal[5].toString().trim());
					}
					if(objectLocal[6] != null){
						weo2p57a.setAfdcCaseNbr(objectLocal[6].toString().trim());
					}
					if(objectLocal[7] != null){
						weo2p57a.setCaseStartDate(objectLocal[7].toString().trim());
					}
					if(objectLocal[8] != null){
						weo2p57a.setAssistType(objectLocal[8].toString().trim());
					}
					if(objectLocal[9] != null){
						weo2p57a.setStatusChgDate(objectLocal[9].toString().trim());
					}
					if(objectLocal[10] != null){
						weo2p57a.setServiceType(objectLocal[10].toString().trim());
					}
					if(objectLocal[11] != null){
						weo2p57a.setgApPin(objectLocal[11].toString().trim());
					}
					if(objectLocal[12] != null){
						weo2p57a.setgCtPin(objectLocal[12].toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}

		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeReadCasesQuery3
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeReadCasesQuery3(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(int i = 0 ;i<entityList.size() ; i++ ){
					Weo2p57a weo2p57a = new Weo2p57a();
					weo2p57a.setApCountry(entityList.get(i).toString().trim());
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeReadCasesQuery4
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeReadCasesQuery4(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(int i = 0 ;i<entityList.size() ; i++ ){
					Weo2p57a weo2p57a = new Weo2p57a();
					weo2p57a.setCtCountry(entityList.get(i).toString().trim());
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeReadCasesQuery5
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeReadCasesQuery5(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object resultLocal : entityList){
					Object[] objectLocal = (Object[]) resultLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setAmount(Double.valueOf(objectLocal[0].toString().trim()));
					}
					if(objectLocal[1] != null){
						weo2p57a.setStartDate(objectLocal[1].toString().trim());
					}
					if(objectLocal[2] != null){
						weo2p57a.setEndDate(objectLocal[2].toString().trim());
					}
					if(objectLocal[3] != null){
						weo2p57a.setObligationType(objectLocal[3].toString().trim());
					}
					if(objectLocal[4] != null){
						weo2p57a.setOrderType(objectLocal[4].toString().trim());
					}
					if(objectLocal[5] != null){
						weo2p57a.setCsExtend18(objectLocal[5].toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCalcLine1Query6
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCalcLine1Query6(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovinterstateLocal : entityList){
					Object objectLocal = (Object) weovinterstateLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setRespFips(objectLocal.toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCalcLine1Query7
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCalcLine1Query7(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovinterstateLocal : entityList){
					Object objectLocal = (Object) weovinterstateLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setInitFips(objectLocal.toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executePriorOblgStatsQuery8
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executePriorOblgStatsQuery8(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovinterstateLocal : entityList){
					Object[] objectLocal = (Object[]) weovinterstateLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setAfdcChSupDelq(Double.valueOf(objectLocal[0].toString().trim()));
					}
					if(objectLocal[1] != null){
						weo2p57a.setAfdcChSupInGrace(Double.valueOf(objectLocal[1].toString().trim()));
					}
					if(objectLocal[2] != null){
						weo2p57a.setAfdcMedDue(Double.valueOf(objectLocal[2].toString().trim()));
					}
					if(objectLocal[3] != null){
						weo2p57a.setAfdcMedRcvd(Double.valueOf(objectLocal[3].toString().trim()));
					}
					if(objectLocal[4] != null){
						weo2p57a.setAfdcMdSupDelq(Double.valueOf(objectLocal[4].toString().trim()));
					}
					if(objectLocal[5] != null){
						weo2p57a.setAfdcMdSupInGrace(Double.valueOf(objectLocal[5].toString().trim()));
					}
					if(objectLocal[6] != null){
						weo2p57a.setNafdcChSupDelq(Double.valueOf(objectLocal[6].toString().trim()));
					}
					if(objectLocal[7] != null){
						weo2p57a.setNafdcChSupInGrace(Double.valueOf(objectLocal[7].toString().trim()));
					}
					if(objectLocal[8] != null){
						weo2p57a.setNafdcMedDue(Double.valueOf(objectLocal[8].toString().trim()));
					}
					if(objectLocal[9] != null){
						weo2p57a.setNafdcMedRcvd(Double.valueOf(objectLocal[9].toString().trim()));
					}
					if(objectLocal[10] != null){
						weo2p57a.setNafdcMdSupDelq(Double.valueOf(objectLocal[10].toString().trim()));
					}
					if(objectLocal[11] != null){
						weo2p57a.setNafdcMdSupInGrace(Double.valueOf(objectLocal[11].toString().trim()));
					}
					if(objectLocal[12] != null){
						weo2p57a.setTotACsDelqRcvd(Double.valueOf(objectLocal[12].toString().trim()));
					}
					if(objectLocal[13] != null){
						weo2p57a.setTotAMsDelqRcvd(Double.valueOf(objectLocal[13].toString().trim()));
					}
					if(objectLocal[14] != null){
						weo2p57a.setaCsInGraceRcvd(Double.valueOf(objectLocal[14].toString().trim()));
					}
					if(objectLocal[15] != null){
						weo2p57a.setaMsInGraceRcvd(Double.valueOf(objectLocal[15].toString().trim()));
					}
					if(objectLocal[16] != null){
						weo2p57a.setTotNCsDelqRcvd(Double.valueOf(objectLocal[16].toString().trim()));
					}
					if(objectLocal[17] != null){
						weo2p57a.setTotNMsDelqRcvd(Double.valueOf(objectLocal[17].toString().trim()));
					}
					if(objectLocal[18] != null){
						weo2p57a.setnCsInGraceRcvd(Double.valueOf(objectLocal[18].toString().trim()));
					}
					if(objectLocal[19] != null){
						weo2p57a.setnMsInGraceRcvd(Double.valueOf(objectLocal[19].toString().trim()));
					}
					if(objectLocal[20] != null){
						weo2p57a.setTotNArrsCint(Double.valueOf(objectLocal[20].toString().trim()));
					}
					if(objectLocal[21] != null){
						weo2p57a.setTotNArrsSint(Double.valueOf(objectLocal[21].toString().trim()));
					}
					if(objectLocal[22] != null){
						weo2p57a.setMthNArrsCint(Double.valueOf(objectLocal[22].toString().trim()));
					}
					if(objectLocal[23] != null){
						weo2p57a.setTotNMedCint(Double.valueOf(objectLocal[23].toString().trim()));
					}
					if(objectLocal[24] != null){
						weo2p57a.setTotNMedSint(Double.valueOf(objectLocal[24].toString().trim()));
					}
					if(objectLocal[25] != null){
						weo2p57a.setMthNMedCint(Double.valueOf(objectLocal[25].toString().trim()));
					}
					if(objectLocal[26] != null){
						weo2p57a.setTotAArrsDue(Double.valueOf(objectLocal[26].toString().trim()));
					}
					if(objectLocal[27] != null){
						weo2p57a.setTotAArrsRcvd(Double.valueOf(objectLocal[27].toString().trim()));
					}
					if(objectLocal[28] != null){
						weo2p57a.setTotNArrsDue(Double.valueOf(objectLocal[28].toString().trim()));
					}
					if(objectLocal[29] != null){
						weo2p57a.setTotNArrsRcvd(Double.valueOf(objectLocal[29].toString().trim()));
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executePriorOblgStatsQuery9
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executePriorOblgStatsQuery9(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovinterstateLocal : entityList){
					Object[] objectLocal = (Object[]) weovinterstateLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setTcArsDue(Double.valueOf(objectLocal[0].toString().trim()));
					}
					if(objectLocal[1] != null){
						weo2p57a.setTcArsRcv(Double.valueOf(objectLocal[1].toString().trim()));
					}
					if(objectLocal[2] != null){
						weo2p57a.setTcChSupDel(Double.valueOf(objectLocal[2].toString().trim()));
					}
					if(objectLocal[3] != null){
						weo2p57a.setTcCsDelRcv(Double.valueOf(objectLocal[3].toString().trim()));
					}
					if(objectLocal[4] != null){
						weo2p57a.setuArsDue(Double.valueOf(objectLocal[4].toString().trim()));
					}
					if(objectLocal[5] != null){
						weo2p57a.setuArsRcv(Double.valueOf(objectLocal[5].toString().trim()));
					}
					if(objectLocal[6] != null){
						weo2p57a.setuChSupDel(Double.valueOf(objectLocal[6].toString().trim()));
					}
					if(objectLocal[7] != null){
						weo2p57a.setuCsDelRcv(Double.valueOf(objectLocal[7].toString().trim()));
					}
					if(objectLocal[8] != null){
						weo2p57a.setnArsCintRcv(Double.valueOf(objectLocal[8].toString().trim()));
					}
					if(objectLocal[9] != null){
						weo2p57a.setnArsSintRcv(Double.valueOf(objectLocal[9].toString().trim()));
					}
					if(objectLocal[10] != null){
						weo2p57a.setMthNArsIntRcv(Double.valueOf(objectLocal[10].toString().trim()));
					}
					if(objectLocal[11] != null){
						weo2p57a.setTcArsCint(Double.valueOf(objectLocal[11].toString().trim()));
					}
					if(objectLocal[12] != null){
						weo2p57a.setTcArsCintRcv(Double.valueOf(objectLocal[12].toString().trim()));
					}
					if(objectLocal[13] != null){
						weo2p57a.setTcArsSint(Double.valueOf(objectLocal[13].toString().trim()));
					}
					if(objectLocal[14] != null){
						weo2p57a.setTcArsSintRcv(Double.valueOf(objectLocal[14].toString().trim()));
					}
					if(objectLocal[15] != null){
						weo2p57a.setMthTcArsInt(Double.valueOf(objectLocal[15].toString().trim()));
					}
					if(objectLocal[16] != null){
						weo2p57a.setMthTcArsIntRcv(Double.valueOf(objectLocal[16].toString().trim()));
					}
					if(objectLocal[17] != null){
						weo2p57a.setuArsCint(Double.valueOf(objectLocal[17].toString().trim()));
					}
					if(objectLocal[18] != null){
						weo2p57a.setuArsCintRcv(Double.valueOf(objectLocal[18].toString().trim()));
					}
					if(objectLocal[19] != null){
						weo2p57a.setuArsSint(Double.valueOf(objectLocal[19].toString().trim()));
					}
					if(objectLocal[20] != null){
						weo2p57a.setuArsSintRcv(Double.valueOf(objectLocal[20].toString().trim()));
					}
					if(objectLocal[21] != null){
						weo2p57a.setMthUArsInt(Double.valueOf(objectLocal[21].toString().trim()));
					}
					if(objectLocal[22] != null){
						weo2p57a.setMthUArsIntRcv(Double.valueOf(objectLocal[22].toString().trim()));
					}
					if(objectLocal[23] != null){
						weo2p57a.setTcChSupInGrace(Double.valueOf(objectLocal[23].toString().trim()));
					}
					if(objectLocal[24] != null){
						weo2p57a.setTcCsInGraceRcv(Double.valueOf(objectLocal[24].toString().trim()));
					}
					if(objectLocal[25] != null){
						weo2p57a.setuChSupInGrace(Double.valueOf(objectLocal[25].toString().trim()));
					}
					if(objectLocal[26] != null){
						weo2p57a.setuCsInGraceRcv(Double.valueOf(objectLocal[26].toString().trim()));
					}
					if(objectLocal[27] != null){
						weo2p57a.setnMedCintRcv(Double.valueOf(objectLocal[27].toString().trim()));
					}
					if(objectLocal[28] != null){
						weo2p57a.setnMedSintRcv(Double.valueOf(objectLocal[28].toString().trim()));
					}
					if(objectLocal[29] != null){
						weo2p57a.setMthNMedIntRcv(Double.valueOf(objectLocal[29].toString().trim()));
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckForHcOrdersQuery10
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckForHcOrdersQuery10(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object checkForHcOrdersLocal : entityList){
					Object objectLocal = (Object) checkForHcOrdersLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setExists(Integer.valueOf(objectLocal.toString().trim()));
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckFyEndCaseStatusQuery11
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckFyEndCaseStatusQuery11(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovcasPerTrackLocal : entityList){
					Object[] objectLocal = (Object[]) weovcasPerTrackLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setOldValueCs(objectLocal[0].toString().trim());
					}
					if(objectLocal[1] != null){
						weo2p57a.setTimeOfEvent(objectLocal[1].toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckFyEndCaseTypeQuery12
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckFyEndCaseTypeQuery12(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovcasPerTrackLocal : entityList){
					Object[] objectLocal = (Object[]) weovcasPerTrackLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setOldValue(objectLocal[0].toString().trim());
					}
					if(objectLocal[1] != null){
						weo2p57a.setNewValue(objectLocal[1].toString().trim());
					}
					if(objectLocal[2] != null){
						weo2p57a.setTimeOfEvent(objectLocal[2].toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckFyEndCaseTypeQuery13
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckFyEndCaseTypeQuery13(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovcasPerTrackLocal : entityList){
					Object[] objectLocal = (Object[]) weovcasPerTrackLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setOldValue(objectLocal[0].toString().trim());
					}
					if(objectLocal[1] != null){
						weo2p57a.setTimeOfEvent(objectLocal[1].toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckFyEndOosTypeQuery14
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckFyEndOosTypeQuery14(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<WeovcasPerTrack> typedQuery = (TypedQuery<WeovcasPerTrack>)entityMgr.createNativeQuery(query);
			List<WeovcasPerTrack>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object weovcasPerTrackLocal : entityList){
					Object[] objectLocal = (Object[]) weovcasPerTrackLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal[0] != null){
						weo2p57a.setOldValueOos(objectLocal[0].toString().trim());
					}
					if(objectLocal[1] != null){
						weo2p57a.setTimeOfEvent(objectLocal[1].toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckChildAgeQuery15
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckChildAgeQuery15(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object checkChildAgeLocal : entityList){
					Object objectLocal = (Object) checkChildAgeLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setChildDob(objectLocal.toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckHearingQuery16
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckHearingQuery16(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object checkHearingQueryLocal : entityList){
					Object objectLocal = (Object) checkHearingQueryLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setInsuOrderedCount(Integer.valueOf(objectLocal.toString().trim()));
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckGrantAmountQuery17
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckGrantAmountQuery17(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			for(Object checkHearingQueryLocal : entityList){
				Object objectLocal = (Object) checkHearingQueryLocal;
				Weo2p57a weo2p57a = new Weo2p57a();
				if(objectLocal != null){
					weo2p57a.setGrantStart(String.valueOf(objectLocal.toString().trim()).trim());
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckForCsjaMsjaOnlyCasesQuery18
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckForCsjaMsjaOnlyCasesQuery18(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object oblgCntLocal : entityList){
					Object objectLocal = (Object) oblgCntLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setOblgCnt(Integer.valueOf(objectLocal.toString().trim()));
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	/*
	 * Method executeCheckForCsjaMsjaOnlyCasesQuery19
	 * @param weo2p57aBOReq
	 * @return weo2p57aBOResp
	 * @throws OscarDataAccessException
	 */
	@Override
	public Weo2p57aBO executeCheckForCsjaMsjaOnlyCasesQuery19(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		List<Weo2p57a> bOList = new ArrayList<>();
		try {
			TypedQuery<Object> typedQuery = (TypedQuery<Object>)entityMgr.createNativeQuery(query);
			List<Object>  entityList = typedQuery.getResultList();
			if(entityList != null && !entityList.isEmpty()){
				for(Object obligationTypeLocal : entityList){
					Object objectLocal = (Object) obligationTypeLocal;
					Weo2p57a weo2p57a = new Weo2p57a();
					if(objectLocal != null){
						weo2p57a.setOblgType(objectLocal.toString().trim());
					}
					bOList.add(weo2p57a);
				}
				weo2p57aBOResp.setWeo2p57a(bOList);
			}
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
	
	@Override
	@Transactional
	public Weo2p57aBO insertQuery(String query) throws OscarDataAccessException {
		LOGGER.debug(AppConstants.REQUEST+ query);
		Weo2p57aBO  weo2p57aBOResp = new Weo2p57aBO();
		try {
			TypedQuery<Weovocse157> typedQuery = (TypedQuery<Weovocse157>)entityMgr.createNativeQuery(query);
			 typedQuery.executeUpdate();
		} catch (Exception ex) {
			LOGGER.error(AppConstants.ERROR + ex);
			throw new OscarDataAccessException(ex);
		}
		LOGGER.debug(AppConstants.RESPONSE+weo2p57aBOResp);
		return weo2p57aBOResp;
	}
}